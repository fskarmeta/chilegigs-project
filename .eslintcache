[{"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\index.js":"1","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\layout.js":"2","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\store\\appContext.js":"3","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\navbar.js":"4","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\scrollToTop.js":"5","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\navbar_admin.js":"6","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\admin\\admin_helloworld.js":"7","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\admin\\raiders.js":"8","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\admin\\home.js":"9","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\store\\flux.js":"10","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\navlist.js":"11","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\CategoryEdit.js":"12","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\HomeEdit.js":"13","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\form-edit-categorias-admin.js":"14","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\placeholder\\objetoglobal.js":"15","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\edit-home\\header.js":"16","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\edit-home\\subheader.js":"17","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\edit-home\\borrar-citas.js":"18","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\edit-home\\citas.js":"19","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\delete-item.js":"20","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\set-category.js":"21","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\delete-category.js":"22","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\set-item.js":"23","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\titulo-requisito.js":"24","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\safe-button.js":"25","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\dj\\editar_perfil.js":"26","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\profile_editor.js":"27","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\placeholder\\ejemploperfil.js":"28","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\detalles.js":"29","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\tarjeta.js":"30","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\biografia.js":"31","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\datospersonales.js":"32","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\requisitos.js":"33","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\agregar-items\\generador.js":"34","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\items.js":"35","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\placeholder\\homeobject.js":"36","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\home\\home.js":"37","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\home_parent.js":"38","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\cliente\\editar_perfil.js":"39","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\profile_editor.js":"40","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\agregar-items\\perfilgeneral.js":"41","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\modal.js":"42","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\tipocuenta.js":"43","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\login.js":"44","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\crearcuenta.js":"45","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\Caja.js":"46","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\HeaderHome.js":"47","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\Carrusel.js":"48","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\Footer.js":"49","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\loginexitoso.js":"50","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\spinner.js":"51","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\recuperarpass.js":"52","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\recuperacionexitosa.js":"53","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\general\\clave.js":"54","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\general\\cambiarclave.js":"55","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\dj\\perfil.js":"56","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\perfil.js":"57","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\general_espectaculo.js":"58","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\mix.js":"59","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\bio.js":"60","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\requisitos.js":"61","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\card.js":"62","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\datos.js":"63","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\fechas.js":"64","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\cancion.js":"65","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\cliente\\perfil.js":"66","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\perfil\\clientperfil.js":"67","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\perfil\\components_perfil\\bio.js":"68","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\perfil\\components_perfil\\card.js":"69","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\gigs\\booking\\bookinicial.js":"70","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\general\\cuenta.js":"71","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\general\\datos_cuenta.js":"72","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\general\\cambiar_clave_cuenta.js":"73","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\gigs\\lista_gigs.js":"74","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\contrataciones\\lista_contrataciones.js":"75","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\dj\\gigs.js":"76","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\cliente\\contrataciones.js":"77","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\gigs\\gigspadre.js":"78","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\gigs\\gig_dj.js":"79","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\gigs\\gig_cliente.js":"80"},{"size":387,"mtime":1607662819050,"results":"81","hashOfConfig":"82"},{"size":3071,"mtime":1608078810291,"results":"83","hashOfConfig":"82"},{"size":980,"mtime":1607671375509,"results":"84","hashOfConfig":"82"},{"size":699,"mtime":1607644014423,"results":"85","hashOfConfig":"82"},{"size":422,"mtime":1606858252128,"results":"86","hashOfConfig":"82"},{"size":1956,"mtime":1607543829143,"results":"87","hashOfConfig":"82"},{"size":347,"mtime":1607843524212,"results":"88","hashOfConfig":"82"},{"size":511,"mtime":1607843279811,"results":"89","hashOfConfig":"82"},{"size":433,"mtime":1607843023973,"results":"90","hashOfConfig":"82"},{"size":6690,"mtime":1608090663241,"results":"91","hashOfConfig":"82"},{"size":2802,"mtime":1608091030579,"results":"92","hashOfConfig":"82"},{"size":2381,"mtime":1607644467291,"results":"93","hashOfConfig":"82"},{"size":2815,"mtime":1607969817519,"results":"94","hashOfConfig":"82"},{"size":5626,"mtime":1607644885760,"results":"95","hashOfConfig":"82"},{"size":2606,"mtime":1607552319360,"results":"96","hashOfConfig":"82"},{"size":2495,"mtime":1607311976326,"results":"97","hashOfConfig":"82"},{"size":6296,"mtime":1607926750802,"results":"98","hashOfConfig":"82"},{"size":1717,"mtime":1607647546630,"results":"99","hashOfConfig":"82"},{"size":3612,"mtime":1608015551464,"results":"100","hashOfConfig":"82"},{"size":996,"mtime":1606946981104,"results":"101","hashOfConfig":"82"},{"size":1647,"mtime":1606931113362,"results":"102","hashOfConfig":"82"},{"size":1001,"mtime":1606935021851,"results":"103","hashOfConfig":"82"},{"size":1812,"mtime":1607564373007,"results":"104","hashOfConfig":"82"},{"size":122,"mtime":1606931113365,"results":"105","hashOfConfig":"82"},{"size":318,"mtime":1606931113361,"results":"106","hashOfConfig":"82"},{"size":196,"mtime":1607800616372,"results":"107","hashOfConfig":"82"},{"size":2953,"mtime":1607814870149,"results":"108","hashOfConfig":"82"},{"size":2417,"mtime":1607799470691,"results":"109","hashOfConfig":"82"},{"size":4182,"mtime":1607658454772,"results":"110","hashOfConfig":"82"},{"size":12170,"mtime":1607812734998,"results":"111","hashOfConfig":"82"},{"size":1592,"mtime":1607301913943,"results":"112","hashOfConfig":"82"},{"size":6454,"mtime":1607307510851,"results":"113","hashOfConfig":"82"},{"size":2181,"mtime":1607617799234,"results":"114","hashOfConfig":"82"},{"size":4698,"mtime":1608012354250,"results":"115","hashOfConfig":"82"},{"size":4756,"mtime":1607229810174,"results":"116","hashOfConfig":"82"},{"size":1211,"mtime":1607659040441,"results":"117","hashOfConfig":"82"},{"size":145,"mtime":1607359284121,"results":"118","hashOfConfig":"82"},{"size":1661,"mtime":1607671378090,"results":"119","hashOfConfig":"82"},{"size":220,"mtime":1607378873476,"results":"120","hashOfConfig":"82"},{"size":1414,"mtime":1607583862127,"results":"121","hashOfConfig":"82"},{"size":7823,"mtime":1607658032901,"results":"122","hashOfConfig":"82"},{"size":8653,"mtime":1608091130143,"results":"123","hashOfConfig":"82"},{"size":1290,"mtime":1607470499069,"results":"124","hashOfConfig":"82"},{"size":2981,"mtime":1607717644856,"results":"125","hashOfConfig":"82"},{"size":5268,"mtime":1607483921040,"results":"126","hashOfConfig":"82"},{"size":747,"mtime":1607656054180,"results":"127","hashOfConfig":"82"},{"size":721,"mtime":1607657218555,"results":"128","hashOfConfig":"82"},{"size":652,"mtime":1607657326510,"results":"129","hashOfConfig":"82"},{"size":1224,"mtime":1607656549944,"results":"130","hashOfConfig":"82"},{"size":777,"mtime":1607633540902,"results":"131","hashOfConfig":"82"},{"size":643,"mtime":1607671876588,"results":"132","hashOfConfig":"82"},{"size":1882,"mtime":1607718854555,"results":"133","hashOfConfig":"82"},{"size":655,"mtime":1607718191648,"results":"134","hashOfConfig":"82"},{"size":487,"mtime":1607721781323,"results":"135","hashOfConfig":"82"},{"size":3936,"mtime":1607725832654,"results":"136","hashOfConfig":"82"},{"size":3040,"mtime":1608084743494,"results":"137","hashOfConfig":"82"},{"size":4317,"mtime":1608011480556,"results":"138","hashOfConfig":"82"},{"size":2090,"mtime":1607799392476,"results":"139","hashOfConfig":"82"},{"size":542,"mtime":1607799392478,"results":"140","hashOfConfig":"82"},{"size":304,"mtime":1607799392449,"results":"141","hashOfConfig":"82"},{"size":2285,"mtime":1607799392480,"results":"142","hashOfConfig":"82"},{"size":2835,"mtime":1608083689654,"results":"143","hashOfConfig":"82"},{"size":3208,"mtime":1608011638785,"results":"144","hashOfConfig":"82"},{"size":1050,"mtime":1607799392461,"results":"145","hashOfConfig":"82"},{"size":2944,"mtime":1608086661654,"results":"146","hashOfConfig":"82"},{"size":2666,"mtime":1607847810743,"results":"147","hashOfConfig":"82"},{"size":931,"mtime":1607840486275,"results":"148","hashOfConfig":"82"},{"size":304,"mtime":1607840065499,"results":"149","hashOfConfig":"82"},{"size":1439,"mtime":1607840065508,"results":"150","hashOfConfig":"82"},{"size":12362,"mtime":1608002824338,"results":"151","hashOfConfig":"82"},{"size":316,"mtime":1607960089086,"results":"152","hashOfConfig":"82"},{"size":935,"mtime":1607960129237,"results":"153","hashOfConfig":"82"},{"size":4516,"mtime":1608012219469,"results":"154","hashOfConfig":"82"},{"size":3337,"mtime":1608079150827,"results":"155","hashOfConfig":"82"},{"size":3343,"mtime":1608079151639,"results":"156","hashOfConfig":"82"},{"size":410,"mtime":1608015579347,"results":"157","hashOfConfig":"82"},{"size":388,"mtime":1608009803239,"results":"158","hashOfConfig":"82"},{"size":3497,"mtime":1608086728905,"results":"159","hashOfConfig":"82"},{"size":9649,"mtime":1608078097934,"results":"160","hashOfConfig":"82"},{"size":14477,"mtime":1608079889207,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"kuxud7",{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"164"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"164"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"164"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"164"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"164"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"164"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"164"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"164"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"164"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"164"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"164"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"164"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"164"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"164"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"164"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"164"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"164"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"164"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"164"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"164"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"164"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"164"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"164"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"164"},"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\index.js",[],["349","350"],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\layout.js",["351"],"import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport injectContext from \"./store/appContext\";\r\nimport ScrollToTop from \"./components/scrollToTop\";\r\nimport { Navbar } from \"./components/navbar\";\r\nimport { HelloWorld } from \"./views/admin/admin_helloworld\";\r\nimport { Raider } from \"./views/admin/raiders\";\r\nimport { AdminHome } from \"./views/admin/home\";\r\nimport { AdminNav } from \"./components/admin/navbar_admin\";\r\nimport { EditarPerfil } from \"./views/dj/editar_perfil\";\r\nimport { EditarPerfilCliente } from \"./views/cliente/editar_perfil\";\r\nimport { DjProfile } from \"./views/dj/perfil\";\r\nimport { ClientProfile } from \"./views/cliente/perfil\";\r\nimport { Cuenta } from \"./views/general/cuenta\";\r\nimport Gigs from \"./views/dj/gigs\";\r\nimport Contrataciones from \"./views/cliente/contrataciones\";\r\nimport Home from \"./views/home/home\";\r\nimport NuevaClave from \"./views/general/clave\";\r\nimport Spinner from \"./components/home/spinner\";\r\nimport GigComponent from \"./views/gigs/gigspadre\";\r\n\r\nconst Layout = () => {\r\n  const basename = process.env.BASENAME || \"\";\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column\">\r\n      <BrowserRouter basename={basename}>\r\n        <ScrollToTop>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/account\">\r\n              <Cuenta />\r\n            </Route>\r\n            <Route exact path=\"/admin\">\r\n              <HelloWorld />\r\n            </Route>\r\n            <Route exact path=\"/dj/edit\">\r\n              <EditarPerfil />\r\n            </Route>\r\n            <Route exact path=\"/dj/gigs\">\r\n              <Gigs />\r\n            </Route>\r\n            <Route exact path=\"/client/edit\">\r\n              <EditarPerfilCliente />\r\n            </Route>\r\n            <Route exact path=\"/client/contrataciones\">\r\n              <Contrataciones />\r\n            </Route>\r\n            <Route exact path=\"/gigs/:id\">\r\n              <GigComponent />\r\n            </Route>\r\n            <Route exact path=\"/recover/:token\">\r\n              <NuevaClave />\r\n            </Route>\r\n            <Route exact path=\"/admin/home\">\r\n              <AdminHome />\r\n            </Route>\r\n            <Route exact path=\"/admin/raider\">\r\n              <Raider />\r\n            </Route>\r\n            <Route exact path=\"/dj/profile/:username\">\r\n              <DjProfile />\r\n            </Route>\r\n            <Route exact path=\"/dj/profile\">\r\n              <span>No puede existir un perfil vacío</span>\r\n              <Spinner />\r\n            </Route>\r\n            <Route exact path=\"/client/profile/:username\">\r\n              <ClientProfile />\r\n            </Route>\r\n            <Route exact path=\"/client/profile\">\r\n              <span>No puede existir un perfil vacío</span>\r\n              <Spinner />\r\n            </Route>\r\n            <Route>\r\n              <h1>No existe esta ruta</h1>\r\n            </Route>\r\n          </Switch>\r\n        </ScrollToTop>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectContext(Layout);\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\store\\appContext.js",["352"],"import React, { useState, useEffect } from \"react\";\r\nimport getState from \"./flux.js\";\r\n\r\nexport const Context = React.createContext(null);\r\n\r\nconst injectContext = (PassedComponent) => {\r\n  const StoreWrapper = (props) => {\r\n    const [state, setState] = useState(\r\n      getState({\r\n        getStore: () => state.store,\r\n        getActions: () => state.actions,\r\n        setStore: (updatedStore) =>\r\n          setState({\r\n            store: Object.assign(state.store, updatedStore),\r\n            actions: { ...state.actions },\r\n          }),\r\n      })\r\n    );\r\n\r\n    useEffect(() => {\r\n      state.actions.getGlobalObjects();\r\n      let token = sessionStorage.getItem(\"chilegigs_token\");\r\n      if (token) {\r\n        state.actions.autoLogin(token);\r\n      }\r\n    }, [setState]);\r\n\r\n    return (\r\n      <Context.Provider value={state}>\r\n        <PassedComponent {...props} />\r\n      </Context.Provider>\r\n    );\r\n  };\r\n  return StoreWrapper;\r\n};\r\n\r\nexport default injectContext;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\navbar.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\scrollToTop.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\navbar_admin.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\admin\\admin_helloworld.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\admin\\raiders.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\admin\\home.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\store\\flux.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\navlist.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\CategoryEdit.js",["353"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { Context } from \"../../store/appContext\";\nimport { EditCategories } from \"./form-admin-add-delete-items/form-edit-categorias-admin\";\n// import { objetosGlobales } from \"../../placeholder/objetoglobal\";\n\n//recordar agregar el useRed arriba\n// const token = \"\";\n// const fetchURL = \"\";\n\nfunction CategoryEditForm() {\n  const { store, actions } = useContext(Context);\n\n  const [global, setGlobal] = useState(store.requisitos);\n  // const [ok, setOk] = useState(false);\n  // fetch de los objetos\n\n  useEffect(() => {\n    setGlobal(store.requisitos);\n  }, [global]);\n  // actualizando el state con lo cambios y PUT fetch\n  function updateGlobalState(attr, obj) {\n    let globalCopy = { ...global };\n    globalCopy[attr] = obj;\n    // esto deberá ser el put\n    // setGlobal(globalCopy);\n    requisitosToServer(globalCopy);\n    //mandar la actualización del fetch (here comes the PUT)\n    //updateObject(globalCopy)\n  }\n  function requisitosToServer(obj) {\n    console.log(obj);\n    fetch(`${store.fetchUrl}objetos/requisitos`, {\n      method: \"PUT\",\n      body: JSON.stringify(obj),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${store.token}`,\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.msg) {\n          console.log(data.msg);\n        }\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n    actions.getGlobalObjects();\n  }\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-4\">\n        <EditCategories\n          titulo={\"Equipos\"}\n          colorDeFondo={\"\"}\n          global={global.equipos}\n          updateGlobalState={updateGlobalState}\n          objectAttr={\"equipos\"}\n        />\n      </div>\n      <div className=\"col-md-4\">\n        <EditCategories\n          titulo={\"Escenario\"}\n          colorDeFondo={\"\"}\n          global={global.escenario}\n          updateGlobalState={updateGlobalState}\n          objectAttr=\"escenario\"\n        />\n      </div>\n      <div className=\"col-md-4\">\n        <EditCategories\n          titulo={\"Food & Drinks\"}\n          colorDeFondo={\"\"}\n          global={global.foodanddrinks}\n          objectAttr={\"foodanddrinks\"}\n        />\n      </div>\n    </div>\n  );\n}\n// }\n\nexport default CategoryEditForm;\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\HomeEdit.js",["354","355"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Context } from \"../../store/appContext\";\r\nimport { Header } from \"./edit-home/header\";\r\nimport { Subheader } from \"./edit-home/subheader\";\r\nimport { Citas } from \"./edit-home/citas\";\r\nimport { BorrarCitas } from \"./edit-home/borrar-citas\";\r\nimport { SetCategory } from \"./form-admin-add-delete-items/component-formulario/set-category\";\r\n// importacion de objeto de ejemplo\r\n// import Home from \"../../placeholder/homeobject\";\r\n\r\n// falta agregar los fetch , token y path's\r\nconst HomeEditForm = () => {\r\n  const { store, actions } = useContext(Context);\r\n  const [home, setHome] = useState(store.home);\r\n\r\n  useEffect(() => {\r\n    setHome(store.home);\r\n  }, [home]);\r\n\r\n  function homeToServer(obj) {\r\n    console.log(obj);\r\n    fetch(`${store.fetchUrl}objetos/home`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(obj),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${store.token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.msg) {\r\n          console.log(data.msg);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n    actions.getGlobalObjects();\r\n  }\r\n  // Ejemplo: key1 = \"header\", key2 = \"cita\", item = \"La mejor página\" | Actualiza propiedad del objeto\r\n  function updateHome(key1, key2, item) {\r\n    let objectCopy = { ...home };\r\n    //borarr ?\r\n    // setHome({ ...objectCopy, [key1]: { ...objectCopy[key1], [key2]: item } });\r\n    //aca hacer put al home en el back\r\n    homeToServer({\r\n      ...objectCopy,\r\n      [key1]: { ...objectCopy[key1], [key2]: item },\r\n    });\r\n  }\r\n\r\n  // Agrega citas al array de citas de home.citas\r\n  function getCita(obj) {\r\n    let objectCopy = { ...home };\r\n    if (objectCopy.citas > 0 || objectCopy.citas !== undefined) {\r\n      objectCopy.citas.push(obj);\r\n    } else {\r\n      objectCopy.citas = [];\r\n      objectCopy.citas.push(obj);\r\n    }\r\n    // Borrar?\r\n    setHome(objectCopy);\r\n    //\r\n    homeToServer(objectCopy);\r\n    setHome(store.home);\r\n  }\r\n\r\n  // traer devuelta un array con las citas que quedan y sustituyo el antiguo\r\n  function citasBorradas(arr) {\r\n    let objectCopy = { ...home };\r\n    objectCopy.citas = arr;\r\n    // borrar?\r\n    // setHome(objectCopy);\r\n    //\r\n    // put al home\r\n    homeToServer(objectCopy);\r\n    setHome(store.home);\r\n  }\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <Header updateHome={updateHome} />\r\n      <Subheader updateHome={updateHome} />\r\n      <Citas getCita={getCita} />\r\n      <BorrarCitas\r\n        citasArray={!!home.citas && home.citas}\r\n        citasBorradas={citasBorradas}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeEditForm;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\form-edit-categorias-admin.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\placeholder\\objetoglobal.js",[],["356","357"],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\edit-home\\header.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\edit-home\\subheader.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\edit-home\\borrar-citas.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\edit-home\\citas.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\delete-item.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\set-category.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\delete-category.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\set-item.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\titulo-requisito.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\admin\\form-admin-add-delete-items\\component-formulario\\safe-button.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\dj\\editar_perfil.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\profile_editor.js",["358","359","360","361","362"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Context } from \"../../store/appContext\";\r\nimport Tarjeta from \"./edit-profile/tarjeta\";\r\nimport Biografia from \"./edit-profile/biografia\";\r\nimport Detalles from \"./edit-profile/detalles\";\r\nimport Requisitos from \"./edit-profile/requisitos\";\r\nimport DatosPersonales from \"./edit-profile/datospersonales\";\r\nimport AgregarCancion from \"./edit-profile/cancion\";\r\n//Estos son placeholder que representan ambos items que deberían estar en el store\r\n// import { objetosGlobales } from \"../../placeholder/objetoglobal\";\r\n// import { ejemploPerfil } from \"../../placeholder/ejemploperfil\";\r\n\r\nconst ProfileEditor = () => {\r\n  //setear al objetoglobal el fetch del objeto global de requisitos\r\n  const { store, actions } = useContext(Context);\r\n\r\n  const [status, setStatus] = useState(store.perfil_status);\r\n\r\n  const [objetoGlobal, setObjetosGlobal] = useState(store.requisitos);\r\n  //setear acá el perfil del usurio actual desde el store\r\n  const [perfil, setPerfil] = useState(store.perfil);\r\n\r\n  // useeffect fetch de perfil y/o objetos globales\r\n  useEffect(() => {\r\n    return () => {\r\n      actions.fetchIndividualDjProfileAfterLogin(store.user_id, store.token);\r\n      console.log(\"unmount\");\r\n    };\r\n  }, [perfil]);\r\n\r\n  useEffect(() => {\r\n    setPerfil(store.perfil);\r\n    return () => {\r\n      setPerfil(store.perfil);\r\n    };\r\n  }, [perfil]);\r\n\r\n  function updateProfile(obj) {\r\n    console.log(obj);\r\n    let objCopy = { ...perfil };\r\n    //boorar esto?\r\n    setPerfil({ ...objCopy, ...obj });\r\n    //\r\n    //al hacer el put de perfil\r\n    actions.updateProfile({ ...objCopy, ...obj });\r\n    actions.fetchIndividualDjProfileAfterLogin(store.user_id, store.token);\r\n    store.perfil_status = \"active\";\r\n  }\r\n\r\n  // aplicar fetch PUT y luego Get (al perfil)\r\n  function updateRequisitosProfile(key, item) {\r\n    let objectCopy = { ...perfil };\r\n    // borrar esto?\r\n    setPerfil({\r\n      ...objectCopy,\r\n      requisitos: { ...objectCopy.requisitos, [key]: item },\r\n    });\r\n\r\n    actions.updateProfile({\r\n      ...objectCopy,\r\n      requisitos: { ...objectCopy.requisitos, [key]: item },\r\n    });\r\n    actions.fetchIndividualDjProfileAfterLogin(store.user_id, store.token);\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      {store.perfil_status === \"inactive\" ? (\r\n        <h4 className=\"text-center m-3\">\r\n          Porfavor crea un perfil para activar tu cuenta\r\n        </h4>\r\n      ) : null}\r\n      <Tarjeta updateProfile={updateProfile} />\r\n      <AgregarCancion updateProfile={updateProfile} />\r\n      <Biografia updateProfile={updateProfile} />\r\n      <Detalles updateProfile={updateProfile} />\r\n      <Requisitos\r\n        objetoGlobal={objetoGlobal}\r\n        perfil={perfil}\r\n        updateRequisitosProfile={updateRequisitosProfile}\r\n      />\r\n      <DatosPersonales updateProfile={updateProfile} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEditor;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\placeholder\\ejemploperfil.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\detalles.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\tarjeta.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\biografia.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\datospersonales.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\requisitos.js",["363"],"import React, { useContext } from \"react\";\r\nimport { Context } from \"../../../store/appContext\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport \"tippy.js/dist/tippy.css\";\r\n\r\nimport Generador from \"./agregar-items/generador\";\r\nconst Requisitos = ({ objetoGlobal, perfil, updateRequisitosProfile }) => {\r\n  const { store, actions } = useContext(Context);\r\n  return (\r\n    <div className=\"border border-dark p-3 mt-2 rounded\">\r\n      <div className=\"d-flex justify-content-start mb-1 ml-1\">\r\n        <h3>Requisitos</h3>\r\n        <div className=\"mt-1 ml-2\">\r\n          <Tippy content=\"Especifica a los clientes tus necesidades básicas\">\r\n            <i className=\"fas fa-info-circle\"></i>\r\n          </Tippy>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-12\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-4 col-lg-12 col-md-12\">\r\n            <Generador\r\n              titulo={\"Equipos\"}\r\n              equipos={objetoGlobal.equipos}\r\n              array={\r\n                !!store.perfil.requisitos && store.perfil.requisitos.equipos\r\n              }\r\n              atributo={\"equipos\"}\r\n              updateRequisitosProfile={updateRequisitosProfile}\r\n            />\r\n          </div>\r\n          <div className=\"col-xl-4 col-lg-12 col-md-12\">\r\n            <Generador\r\n              titulo={\"Escenario\"}\r\n              equipos={objetoGlobal.escenario}\r\n              array={\r\n                !!store.perfil.requisitos && store.perfil.requisitos.escenario\r\n              }\r\n              atributo={\"escenario\"}\r\n              updateRequisitosProfile={updateRequisitosProfile}\r\n            />\r\n          </div>\r\n          <div className=\"col-xl-4 col-lg-12 col-md-12\">\r\n            <Generador\r\n              titulo={\"Food and Drinks\"}\r\n              equipos={objetoGlobal.foodanddrinks}\r\n              array={\r\n                !!store.perfil.requisitos &&\r\n                store.perfil.requisitos.foodanddrinks\r\n              }\r\n              atributo={\"foodanddrinks\"}\r\n              updateRequisitosProfile={updateRequisitosProfile}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Requisitos;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\agregar-items\\generador.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\items.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\placeholder\\homeobject.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\home\\home.js",["364"],"import HomeParent from \"../../components/home/home_parent\";\r\n\r\nconst Home = () => {\r\n  return <HomeParent />;\r\n};\r\n\r\nexport default HomeParent;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\home_parent.js",["365","366"],"import React, { useState, useContext, useEffect } from \"react\";\r\n//bafian\r\n\r\nimport { Context } from \"../../store/appContext\";\r\n//\r\n// import { objetosGlobales } from \"../../placeholder/objetoglobal\";\r\nimport Home from \"../../placeholder/homeobject\";\r\nimport HeaderHome from \"./HeaderHome\";\r\nimport Caja from \"./Caja\";\r\nimport Carrusel from \"./Carrusel\";\r\nimport Footer from \"./Footer\";\r\nimport Spinner from \"./spinner\";\r\n//importar tus subcomponentes\r\n//pasar comos props los objetos globales (objetos)\r\n\r\nconst HomeParent = () => {\r\n  const { store, actions } = useContext(Context);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [home, setHome] = useState(Home);\r\n\r\n  useEffect(() => {\r\n    getGlobalObjects();\r\n  }, []);\r\n  const getGlobalObjects = () => {\r\n    fetch(`${store.fetchUrl}objetos`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setHome(data.home);\r\n        setIsLoaded(true);\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        setIsLoaded(true);\r\n        setHome(Home);\r\n      });\r\n  };\r\n\r\n  if (!isLoaded) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div\r\n        style={{\r\n          overflow: \"hidden\",\r\n          backgroundColor: `${home.subheader.color}`,\r\n        }}\r\n      >\r\n        <HeaderHome header={home.header} />\r\n        <Caja subheader={home.subheader} />\r\n        <Carrusel citas={home.citas} />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HomeParent;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\cliente\\editar_perfil.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\profile_editor.js",["367"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Context } from \"../../store/appContext\";\r\n// import { ejemploPerfilCliente } from \"../../placeholder/ejemploperfil\";\r\nimport ProfileEditor from \"./agregar-items/perfilgeneral\";\r\nimport Biografia from \"../dj/edit-profile/biografia\";\r\n\r\nconst ClientProfileEditor = () => {\r\n  const { store, actions } = useContext(Context);\r\n  // acá tiene que llegar el perfil del usuario\r\n  const [perfil, setPerfil] = useState(store.perfil);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      actions.fetchIndividualClientProfileAfterLogin(\r\n        store.user_id,\r\n        store.token\r\n      );\r\n      console.log(\"unmount\");\r\n    };\r\n  }, []);\r\n\r\n  function updateProfile(obj) {\r\n    let objCopy = { ...perfil };\r\n    setPerfil({ ...objCopy, ...obj });\r\n    // aca tiene que ir el PUT\r\n    actions.updateProfile({ ...objCopy, ...obj });\r\n    actions.fetchIndividualClientProfileAfterLogin(store.user_id, store.token);\r\n    store.perfil_status = \"active\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {store.perfil_status === \"inactive\" ? (\r\n        <h4 className=\"text-center m-3\">\r\n          Porfavor crea un perfil para activar tu cuenta\r\n        </h4>\r\n      ) : null}\r\n      <ProfileEditor updateProfile={updateProfile} />\r\n      <Biografia updateProfile={updateProfile} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientProfileEditor;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\agregar-items\\perfilgeneral.js",["368"],"import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../../../store/appContext\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport unknownUserImagePath from \"./unknown-user.jpg\";\r\nimport { EditarPerfil } from \"../../../views/dj/editar_perfil\";\r\n\r\nconst validacionImagen = (\r\n  <small className=\"text-danger pl-1\">Elije una foto de perfil porfavor</small>\r\n);\r\n\r\nconst validacionOk = (\r\n  <small className=\"text-success pl-1\">Perfil creado!</small>\r\n);\r\n\r\nconst ProfileEditor = ({ updateProfile }) => {\r\n  const { store } = useContext(Context);\r\n  const [image, setImage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [imageval, setImageval] = useState(false);\r\n  const [ok, setOk] = useState(false);\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    data.imagen = image;\r\n    if (data.imagen === \"\") {\r\n      return setImageval(true);\r\n    }\r\n    data.status = \"active\";\r\n    console.log(data);\r\n    reset({});\r\n    setOk(true);\r\n    setImageval(false);\r\n    updateProfile(data);\r\n  };\r\n\r\n  const uploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"clients_preset\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/chilegigs/image/upload/\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const file = await res.json();\r\n    setImage(file.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"border border-dark p-3 rounded mt-2\">\r\n      <div className=\"d-flex justify-content-start mb-1 ml-4\">\r\n        <h3>Perfil</h3>\r\n      </div>\r\n\r\n      <div className=\"col-md-12\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <div className=\"col-md-12 mb-1\">\r\n                <div className=\"update-profile-image text-center\">\r\n                  {loading ? (\r\n                    <img\r\n                      src={\r\n                        !!store.perfil.imagen && store.perfil.imagen.length > 0\r\n                          ? store.perfil.imagen\r\n                          : unknownUserImagePath\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"img-thumbnail\"\r\n                      style={{ width: \"300px\" }}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      src={image}\r\n                      alt=\"\"\r\n                      className=\"img-thumbnail\"\r\n                      style={{ width: \"300px\" }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"customFile\"\r\n                  onChange={uploadImage}\r\n                />\r\n                <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                  Imagen\r\n                </label>\r\n                {imageval ? validacionImagen : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n              <div className=\"form-row\">\r\n                <div className=\"col-md-6 mb-6\">\r\n                  <label htmlFor=\"nombre\">Nombre</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"nombre\"\r\n                    name=\"nombre\"\r\n                    placeholder=\"Nombre\"\r\n                    ref={register({\r\n                      required: true,\r\n                      minLength: 3,\r\n                      maxLength: 20,\r\n                    })}\r\n                  />\r\n                  {errors.nombre && (\r\n                    <small className=\"text-danger\">Nombre invalido</small>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-md-6 mb-6\">\r\n                  <label htmlFor=\"apellido\">Apellido</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"apellido\"\r\n                    id=\"apellido\"\r\n                    placeholder=\"Apellido\"\r\n                    ref={register({\r\n                      required: true,\r\n                      minLength: 3,\r\n                      maxLength: 20,\r\n                    })}\r\n                  />\r\n                  {errors.apellido && (\r\n                    <small className=\"text-danger\">Apellido invalido</small>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-md-6 mb-6\">\r\n                  <label htmlFor=\"rut\">RUT o Número de Identificación</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"rut\"\r\n                    name=\"rut\"\r\n                    placeholder=\"Rut\"\r\n                    ref={register({\r\n                      required: true,\r\n                      minLength: 3,\r\n                      maxLength: 20,\r\n                    })}\r\n                  />\r\n                  {errors.rut && (\r\n                    <small className=\"text-danger\">Rut invalido</small>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-md-6 mb-6\">\r\n                  <label htmlFor=\"nacionalidad\">Nacionalidad</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"nacionalidad\"\r\n                    id=\"nacionalidad\"\r\n                    placeholder=\"Nacionalidad\"\r\n                    ref={register({\r\n                      required: true,\r\n                      minLength: 3,\r\n                      maxLength: 20,\r\n                    })}\r\n                  />\r\n                  {errors.nacionalidad && (\r\n                    <small className=\"text-danger\">Nacionalidad invalida</small>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-md-6 mb-6\">\r\n                  <label htmlFor=\"ciudad\">Ciudad</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"ciudad\"\r\n                    name=\"ciudad\"\r\n                    placeholder=\"Ciudad\"\r\n                    ref={register({\r\n                      required: true,\r\n                      minLength: 3,\r\n                      maxLength: 20,\r\n                    })}\r\n                  />\r\n                  {errors.ciudad && (\r\n                    <small className=\"text-danger\">Ciudad invalida</small>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-md-6 mb-6\">\r\n                  <label htmlFor=\"pais\">País</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"pais\"\r\n                    id=\"pais\"\r\n                    placeholder=\"pais\"\r\n                    ref={register({\r\n                      required: true,\r\n                      minLength: 3,\r\n                      maxLength: 20,\r\n                    })}\r\n                  />\r\n                  {errors.pais && (\r\n                    <small className=\"text-danger\">Pais invalido</small>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <button className=\"btn btn-primary mt-3\" type=\"submit\">\r\n                Crear Perfil\r\n              </button>\r\n              {ok ? validacionOk : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEditor;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\modal.js",["369","370"],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\tipocuenta.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\login.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\crearcuenta.js",["371","372"],"// import \"./elegircuenta.css\";\r\nimport React, { useState } from \"react\";\r\nconst { Modal } = require(\"react-bootstrap\");\r\n\r\nconst usernameWarning = (\r\n  <small className=\"text-danger\">\r\n    Mínimo tres caractéres, alfanumérico y sin espacios\r\n  </small>\r\n);\r\n\r\nconst emailWarning = <small className=\"text-danger\">Correo no es válido</small>;\r\n\r\nconst passNoMatch = (\r\n  <small className=\"text-danger\">Contraseñas no coinciden</small>\r\n);\r\nconst passValid = (\r\n  <small className=\"text-danger pl-2\">\r\n    Contraseñas con almenos una mayúscula, una minúscula y un número\r\n  </small>\r\n);\r\nconst CrearCuenta = ({\r\n  titulo,\r\n  con,\r\n  ErrorDeConexion,\r\n  roleID,\r\n  CreateAccountFetch,\r\n  errorMsg,\r\n}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameVal, setUsernameVal] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailVal, setEmailVal] = useState(false);\r\n  const [password1, setPassword1] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [match, setMatch] = useState(false);\r\n  const [passVal, setPassVal] = useState(false);\r\n\r\n  function createAccount(e) {\r\n    e.preventDefault();\r\n    if (username.length < 3 || username.length > 50) {\r\n      return setUsernameVal(true);\r\n    }\r\n    if (!/^(?!admin)^[a-zA-Z0-9]*$/gm.test(username)) {\r\n      return setUsernameVal(true);\r\n    }\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      return setEmailVal(true);\r\n    }\r\n    if (email.length < 3 || email.length > 30) {\r\n      return setEmailVal(true);\r\n    }\r\n    if (password1 !== password2) {\r\n      return setMatch(true);\r\n    }\r\n    if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/.test(password2)) {\r\n      return setPassVal(true);\r\n    }\r\n    let emailCopy = email;\r\n    if (emailCopy === \"\") {\r\n      return setEmailVal(true);\r\n    }\r\n    setUsernameVal(false);\r\n    setEmailVal(false);\r\n    setMatch(false);\r\n    setPassVal(false);\r\n    let data = {\r\n      username: username,\r\n      email: emailCopy,\r\n      password: password1,\r\n      role: parseInt(roleID),\r\n    };\r\n    CreateAccountFetch(data);\r\n  }\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <span>{titulo}</span>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"modal-dialog modal-login\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <i className=\"fa fa-user\"></i>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nombre de usuario\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required=\"required\"\r\n                  />\r\n                  {usernameVal ? usernameWarning : null}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <i className=\"fa fa-at\"></i>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Correo Electronico\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required=\"required\"\r\n                  />\r\n                  {emailVal ? emailWarning : null}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <i className=\"fa fa-lock\"></i>\r\n                  <input\r\n                    type=\"password\"\r\n                    value={password1}\r\n                    onChange={(e) => setPassword1(e.target.value)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Contraseña\"\r\n                    required=\"required\"\r\n                  />\r\n                  {match ? passNoMatch : null}\r\n                  {passVal ? passValid : null}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <i className=\"fa fa-lock\"></i>\r\n                  <input\r\n                    type=\"password\"\r\n                    value={password2}\r\n                    onChange={(e) => setPassword2(e.target.value)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Repetir contraseña\"\r\n                    required=\"required\"\r\n                  />\r\n                  {match ? passNoMatch : null}\r\n                  {passVal ? passValid : null}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block btn-lg\"\r\n                    onClick={(e) => createAccount(e)}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {errorMsg !== \"\" ? (\r\n              <span className=\"text-danger\">{errorMsg}</span>\r\n            ) : null}\r\n            {con ? ErrorDeConexion : null}\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrearCuenta;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\Caja.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\HeaderHome.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\Carrusel.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\Footer.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\loginexitoso.js",["373","374"],"import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Context } from \"../../../store/appContext\";\r\n\r\nconst { Modal } = require(\"react-bootstrap\");\r\n\r\nconst LoginExitoso = ({ routeAfterLogin }) => {\r\n  const { store, actions } = useContext(Context);\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          <span>¡Login exitoso! Bienvenido {store.username}</span>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <span className=\"btn btn-success\" onClick={() => routeAfterLogin()}>\r\n            Continuar\r\n          </span>\r\n        </div>\r\n      </Modal.Body>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginExitoso;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\home\\spinner.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\recuperarpass.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\modal\\components\\recuperacionexitosa.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\general\\clave.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\general\\cambiarclave.js",["375"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../store/appContext\";\r\n\r\nconst passValid = (\r\n  <small className=\"text-danger pl-2\">\r\n    Contraseñas con almenos una mayúscula, una minúscula y un número\r\n  </small>\r\n);\r\n\r\nconst passNoMatch = (\r\n  <small className=\"text-danger\">Contraseñas no coinciden</small>\r\n);\r\n\r\nconst allOk = (\r\n  <small className=\"text-success\">\r\n    Contraseña modificada, porfavor vuelve a ingresar...\r\n  </small>\r\n);\r\n\r\nconst errorFetch = (\r\n  <small className=\"text-danger\">Hubo un error de conexion</small>\r\n);\r\n\r\nconst CambiarClave = () => {\r\n  const { store, actions } = useContext(Context);\r\n\r\n  //calves\r\n  const [pass1, setPass1] = useState(\"\");\r\n  const [pass2, setPass2] = useState(\"\");\r\n\r\n  //validaciones\r\n  const [match, setMatch] = useState(false);\r\n  const [passVal, setPassVal] = useState(false);\r\n  const [ok, setOk] = useState(false);\r\n\r\n  //fetch\r\n  const [error, setError] = useState(null);\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  function cambiarClave() {\r\n    let currentLocation = window.location.pathname;\r\n    let token = currentLocation.match(/\\/([^\\/]+)\\/?$/)[1];\r\n    if (pass1 !== pass2) {\r\n      setPassVal(false);\r\n      return setMatch(true);\r\n    }\r\n    if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/.test(pass2)) {\r\n      setMatch(false);\r\n      return setPassVal(true);\r\n    }\r\n    let obj = {\r\n      password: pass1,\r\n    };\r\n    mandarNuevaClave(obj, token);\r\n  }\r\n\r\n  function mandarNuevaClave(obj, token) {\r\n    fetch(`${store.fetchUrl}user/update/password`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(obj),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.msg) {\r\n          setMsg(data.msg);\r\n        } else {\r\n          setMsg(\"\");\r\n          setMatch(false);\r\n          setPassVal(false);\r\n          setOk(true);\r\n          setTimeout(function () {\r\n            actions.logOut();\r\n            history.push(\"/\");\r\n          }, 3000);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div ClassName=\"container\">\r\n        <div ClassName=\"row\">\r\n          <div ClassName=\"col-sm-4\">\r\n            <label>Nueva Contraseña</label>\r\n            <div ClassName=\"form-group pass_show\">\r\n              <input\r\n                type=\"password\"\r\n                value={pass1}\r\n                ClassName=\"form-control\"\r\n                placeholder=\"Nueva Contraseña\"\r\n                onChange={(e) => setPass1(e.target.value)}\r\n              />\r\n            </div>\r\n            <label>Confirmar Constraseña</label>\r\n            <div ClassName=\"form-group pass_show\">\r\n              <input\r\n                type=\"password\"\r\n                value={pass2}\r\n                ClassName=\"form-control\"\r\n                placeholder=\"Confirmar Constraseña\"\r\n                onChange={(e) => setPass2(e.target.value)}\r\n              />\r\n            </div>\r\n            <span className=\"btn btn-primary mt-3\" onClick={cambiarClave}>\r\n              Enviar\r\n            </span>\r\n            <div className=\"d-flex flex-column mt-1\">\r\n              <div ClassName=\"col-sm-4\">\r\n                {match ? passNoMatch : null}\r\n                {passVal ? passValid : null}\r\n                {ok ? allOk : null}\r\n                {error ? errorFetch : null}\r\n                {msg.length > 0 ? (\r\n                  <small className=\"text-danger\">{msg}</small>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CambiarClave;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\dj\\perfil.js",["376","377","378","379","380","381","382"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport DjPerfil from \"../../components/dj/perfil/perfil\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Context } from \"../../store/appContext\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { ejemploPerfil } from \"../../placeholder/ejemploperfil\";\r\nimport Spinner from \"../../components/home/spinner\";\r\n\r\nconst mensajeLogin = (\r\n  <div>\r\n    Hola! Tienes que ingresar como usuario para poder ver este contenido\r\n  </div>\r\n);\r\n\r\nconst perfilInactivoMensaje = <div>Este perfil aún no está activo</div>;\r\n\r\nexport const DjProfile = () => {\r\n  const { store } = useContext(Context);\r\n  const [profile, setProfile] = useState(ejemploPerfil);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [msg, setMsg] = useState(null);\r\n  const [logMsg, setLogMsg] = useState(false);\r\n  const [perfilInactivo, setPerfilInactivo] = useState(false);\r\n  const [datosPrivados, setDatosPrivados] = useState(false);\r\n\r\n  let { username } = useParams();\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!store.LoggedIn) {\r\n      setLogMsg(true);\r\n    } else {\r\n      fetchProfile(username);\r\n    }\r\n  }, [store.LoggedIn]);\r\n\r\n  useEffect(() => {\r\n    for (let gig of store.gigs) {\r\n      if (\r\n        gig.dj_id === profile.dj_id ||\r\n        gig.username_cliente === store.username\r\n      ) {\r\n        setDatosPrivados(true);\r\n      }\r\n    }\r\n  }, [profile]);\r\n\r\n  const fetchProfile = (username) => {\r\n    fetch(`${store.fetchUrl}dj/profile/username/${username}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${store.token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.msg) {\r\n          setIsLoaded(true);\r\n          setLogMsg(false);\r\n          setMsg(data.msg);\r\n        }\r\n        if (data.status === \"inactive\") {\r\n          setPerfilInactivo(true);\r\n          setIsLoaded(true);\r\n        } else {\r\n          setLogMsg(false);\r\n          setMsg(null);\r\n          setError(null);\r\n          setProfile(data);\r\n          setIsLoaded(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      });\r\n  };\r\n  if (logMsg) {\r\n    return (\r\n      <>\r\n        {mensajeLogin}\r\n        <Spinner />\r\n      </>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <div>Hubo un problema de conexion</div>;\r\n  } else if (!isLoaded) {\r\n    return <Spinner />;\r\n  } else if (msg) {\r\n    return <div>{msg}</div>;\r\n  } else if (perfilInactivo) {\r\n    return (\r\n      <>\r\n        {perfilInactivoMensaje}\r\n        <Spinner />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <DjPerfil fetchProfile={profile} datosPrivados={datosPrivados} />\r\n      </>\r\n    );\r\n  }\r\n};\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\perfil.js",["383","384"],"import React, { useState, useContext } from \"react\";\r\n// import { ejemploPerfil } from \"../../../placeholder/ejemploperfil\";\r\nimport { Context } from \"../../../store/appContext\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Mix from \"./components_perfil/mix\";\r\nimport DjProfileCard from \"./components_perfil/card\";\r\nimport Bio from \"./components_perfil/bio\";\r\nimport GeneralEspectaculo from \"./components_perfil/general_espectaculo\";\r\nimport RequisitosDj from \"./components_perfil/requisitos\";\r\nimport DatosPersonales from \"./components_perfil/datos\";\r\nimport Fechas from \"./components_perfil/fechas\";\r\nimport Booking from \"../../gigs/booking/bookinicial\";\r\nconst DjPerfil = ({ fetchProfile, datosPrivados }) => {\r\n  const [perfil, setPerfil] = useState(fetchProfile);\r\n  const { store, actions } = useContext(Context);\r\n\r\n  // para cuando tengamos gigs y queramos renderear los datos personales\r\n\r\n  const [alert, setAlert] = useState(false);\r\n  //\r\n\r\n  const warning = (\r\n    <small className=\"text-danger text-center\">\r\n      Solamente clientes pueden hacer booking!\r\n    </small>\r\n  );\r\n  // Modal\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    if (store.cuenta.role.id !== 3) {\r\n      setAlert(true);\r\n      setTimeout(function () {\r\n        setAlert(false);\r\n      }, 3000);\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  };\r\n  //\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Booking</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Booking\r\n            clientUsername={store.cuenta.username}\r\n            clientId={store.cuenta.id}\r\n            djUsername={perfil.username}\r\n            djId={!!perfil && perfil.dj_id}\r\n            fetchUrl={store.fetchUrl}\r\n            token={store.token}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"container\">\r\n        {perfil.agregar_cancion && perfil.agregar_cancion ? (\r\n          <Mix mix={perfil.url_cancion} />\r\n        ) : null}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <DjProfileCard\r\n              imagen={perfil.imagen}\r\n              artista={perfil.artista}\r\n              ciudad={perfil.ciudad}\r\n              pais={perfil.pais}\r\n              rating={perfil.suma_rating}\r\n              contrataciones={perfil.contrataciones}\r\n              tecnica={perfil.tecnica}\r\n              generos={perfil.generos}\r\n              instagram={perfil.instagram}\r\n              soundcloud={perfil.soundcloud}\r\n              mixcloud={perfil.mixcloud}\r\n            />\r\n            <span className=\"btn btn-dark w-100 mt-3\" onClick={handleShow}>\r\n              Agenda este DJ aquí !\r\n            </span>\r\n            {alert ? warning : null}\r\n            <Fechas />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <Bio biografia={perfil.biografia} />\r\n            <GeneralEspectaculo\r\n              servicios={perfil.servicios}\r\n              dur_min={perfil.dur_min}\r\n              dur_max={perfil.dur_max}\r\n              staff={perfil.staff}\r\n              viajes={perfil.viajes}\r\n              arriendo={perfil.arrienda_equipos}\r\n            />\r\n            <RequisitosDj\r\n              equipos={!!perfil && perfil.requisitos.equipos}\r\n              escenario={!!perfil && perfil.requisitos.escenario}\r\n              foodanddrinks={!!perfil && perfil.requisitos.foodanddrinks}\r\n            />\r\n            <DatosPersonales\r\n              datosPrivados={datosPrivados}\r\n              nombre={perfil.datos.nombre}\r\n              apellido={perfil.datos.apellido}\r\n              nacionalidad={perfil.datos.nacionalidad}\r\n              celular={perfil.datos.celular}\r\n              rut={perfil.datos.rut}\r\n              calle={perfil.datos.calle}\r\n              numero={perfil.datos.numero}\r\n              ciudad={perfil.datos.ciudad}\r\n              region={perfil.datos.region}\r\n              pais={perfil.datos.pais}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DjPerfil;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\general_espectaculo.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\mix.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\bio.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\requisitos.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\card.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\datos.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\perfil\\components_perfil\\fechas.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\edit-profile\\cancion.js",["385","386"],"import React, { useState } from \"react\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst validacionLink = (\r\n  <small className=\"text-danger pl-1\">Link incorrecto</small>\r\n);\r\n\r\nconst todoOk = <small className=\"text-success pl-1\">Todo ok !</small>;\r\n\r\nconst AgregarCancion = ({ updateProfile }) => {\r\n  const [value, setValue] = useState(2);\r\n  const [link, setLink] = useState(\"\");\r\n  const [linkval, setLinkval] = useState(false);\r\n  const [ok, setOk] = useState(false);\r\n\r\n  const handleChange = (val) => setValue(val);\r\n\r\n  function actualizarDatos() {\r\n    let linkCopy = link;\r\n    if (value === 1) {\r\n      if (linkCopy === \"\") {\r\n        return setLinkval(true);\r\n      }\r\n      if (\r\n        !/https?:\\/\\/(www\\.)?[mixcloud\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/.test(\r\n          linkCopy\r\n        )\r\n      ) {\r\n        return setLinkval(true);\r\n      } else {\r\n        let finalLink = linkCopy.match(/(?<=com).+/g);\r\n        setLinkval(false);\r\n        setOk(true);\r\n        let obj = { agregar_cancion: true, url_cancion: finalLink[0] };\r\n        updateProfile(obj);\r\n      }\r\n    }\r\n    if (value === 2) {\r\n      setLinkval(false);\r\n      setOk(true);\r\n      let obj = { agregar_cancion: false, url_cancion: \"nada\" };\r\n      updateProfile(obj);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"border border-dark p-3 mt-2 rounded\">\r\n      <div className=\"d-flex justify-content-start mb-1 ml-1\">\r\n        <h3>Agregar Mix</h3>\r\n      </div>\r\n\r\n      <div className=\"col-md-12\">\r\n        <div className=\"d-flex flex-column\">\r\n          <span>Agregar mix desde Mixcloud a mi perfil</span>\r\n          <div>\r\n            <ToggleButtonGroup\r\n              type=\"radio\"\r\n              name=\"options\"\r\n              defaultValue={2}\r\n              value={value}\r\n              onChange={handleChange}\r\n              color=\"black\"\r\n              className=\"mt-2\"\r\n            >\r\n              <ToggleButton value={1} variant=\"secondary\">\r\n                Si\r\n              </ToggleButton>\r\n              <ToggleButton value={2} variant=\"secondary\">\r\n                No\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mt-4\"\r\n            placeholder=\"https://www.mixcloud.com/tu-perfil/tu-mix/\"\r\n            value={link}\r\n            onChange={(e) => setLink(e.target.value)}\r\n          />\r\n          {linkval ? validacionLink : null}\r\n        </div>\r\n        <span\r\n          name=\"mandar-info-tarjeta\"\r\n          className=\"btn btn-primary mt-4\"\r\n          role=\"button\"\r\n          onClick={actualizarDatos}\r\n        >\r\n          Actuarlizar Datos\r\n        </span>\r\n        {ok ? todoOk : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgregarCancion;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\cliente\\perfil.js",["387","388","389","390","391","392"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport ClientPerfil from \"../../components/cliente/perfil/clientperfil\";\r\nimport { Context } from \"../../store/appContext\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { ejemploPerfil } from \"../../placeholder/ejemploperfil\";\r\nimport Spinner from \"../../components/home/spinner\";\r\n\r\nconst mensajeLogin = (\r\n  <div>\r\n    Hola! Tienes que ingresar como usuario para poder ver este contenido\r\n  </div>\r\n);\r\n\r\nconst perfilInactivoMensaje = <div>Este perfil aún no está activo</div>;\r\n\r\nexport const ClientProfile = () => {\r\n  const { store, actions } = useContext(Context);\r\n  const [profile, setProfile] = useState(ejemploPerfil);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [msg, setMsg] = useState(null);\r\n  const [logMsg, setLogMsg] = useState(false);\r\n  const [perfilInactivo, setPerfilInactivo] = useState(false);\r\n  let { username } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (!store.LoggedIn) {\r\n      setLogMsg(true);\r\n    } else {\r\n      fetchProfile(username);\r\n    }\r\n  }, [store.LoggedIn]);\r\n\r\n  const fetchProfile = (username) => {\r\n    fetch(`${store.fetchUrl}client/profile/username/${username}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${store.token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.msg) {\r\n          setIsLoaded(true);\r\n          setLogMsg(false);\r\n          setMsg(data.msg);\r\n        }\r\n        if (data.status === \"inactive\") {\r\n          setPerfilInactivo(true);\r\n          setIsLoaded(true);\r\n        } else {\r\n          setLogMsg(false);\r\n          setMsg(null);\r\n          setError(null);\r\n          setProfile(data);\r\n          setIsLoaded(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  if (logMsg) {\r\n    return (\r\n      <>\r\n        {mensajeLogin}\r\n        <Spinner />\r\n      </>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <div>Hubo un problema de conexion</div>;\r\n  } else if (!isLoaded) {\r\n    return <Spinner />;\r\n  } else if (msg) {\r\n    return <div>{msg}</div>;\r\n  } else if (perfilInactivo) {\r\n    return (\r\n      <>\r\n        {perfilInactivoMensaje}\r\n        <Spinner />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <ClientPerfil fetchProfile={profile} />\r\n      </>\r\n    );\r\n  }\r\n};\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\perfil\\clientperfil.js",["393"],"import React, { useState } from \"react\";\r\n// import { ejemploPerfilCliente } from \"../../testitem.js\";\r\nimport ClientProfileCard from \"./components_perfil/card\";\r\nimport Bio from \"./components_perfil/bio\";\r\n\r\nconst ClientPerfil = ({ fetchProfile }) => {\r\n  const [profile, setProfile] = useState(fetchProfile);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <ClientProfileCard\r\n            nombre={profile.nombre}\r\n            apellido={profile.apellido}\r\n            imagen={profile.imagen}\r\n            ciudad={profile.ciudad}\r\n            pais={profile.pais}\r\n            rating={profile.suma_rating}\r\n            contrataciones={profile.contrataciones}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <Bio biografia={profile.biografia} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPerfil;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\perfil\\components_perfil\\bio.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\perfil\\components_perfil\\card.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\gigs\\booking\\bookinicial.js",["394"],"import React, { useState } from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Select from \"react-select\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst warning = (\r\n  <small className=\"text-danger\">Hay campos vacíos o invalidos</small>\r\n);\r\n\r\nconst dayWarning = (\r\n  <small className=\"text-danger\">No puedes agendar el mismo día</small>\r\n);\r\n\r\nconst todoOk = (\r\n  <h4 className=\"text-success font-weight-bold\">\r\n    {`Booking ha sido enviado con éxito, espera respuesta del Dj :) ! `}\r\n  </h4>\r\n);\r\n// PLACEHOLDERS\r\n\r\nexport const serviciosOptions = [\r\n  { value: \"Club\", label: \"Club\" },\r\n  { value: \"Festival\", label: \"Festival\" },\r\n  { value: \"Matrimonio\", label: \"Matrimonio\" },\r\n  { value: \"Cumpleaños\", label: \"Cumpleaños\" },\r\n  { value: \"Evento Corporativo\", label: \"Evento Corporativo\" },\r\n  { value: \"Fiesta Privada\", label: \"Fiesta Privada\" },\r\n  { value: \"After\", label: \"After\" },\r\n];\r\n\r\nconst tiempos = [\r\n  { label: \"30 min\", value: \"30 min\" },\r\n  { label: \"45 min\", value: \"45 min\" },\r\n  { label: \"1 hr\", value: \"1hr\" },\r\n  { label: \"1 hr 30 min\", value: \"1 hr 30 min\" },\r\n  { label: \"1 hr 45 min\", value: \"1 hr 45 min\" },\r\n  { label: \"2 hrs\", value: \"2 hrs\" },\r\n  { label: \"2 hrs 30 min\", value: \"2 hrs 30 min\" },\r\n  { label: \"3 hrs\", value: \"3 hrs\" },\r\n  { label: \"3 hrs 30 min\", value: \"3 hrs 30 min\" },\r\n  { label: \"4 hrs\", value: \"4 hrs\" },\r\n  { label: \"5 hrs 30 min\", value: \"5 hrs 30 min\" },\r\n  { label: \"6 hrs\", value: \"6 hrs\" },\r\n  { label: \"6 hrs 30 min\", value: \"6 hrs 30 min\" },\r\n  { label: \"7 hrs\", value: \"7 hrs\" },\r\n];\r\n\r\nconst Booking = ({\r\n  clientUsername,\r\n  djUsername,\r\n  clientId,\r\n  djId,\r\n  token,\r\n  fetchUrl,\r\n}) => {\r\n  const [dia, setDia] = useState(new Date());\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [nombreEvent, setNombreEvent] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const [direccion, setDireccion] = useState(\"\");\r\n  const [llegada, setLLegada] = useState(\"\");\r\n  const [toca, setToca] = useState(\"\");\r\n  const [duracion, setDuracion] = useState(\"\");\r\n  const [transporte, setTransporte] = useState(2);\r\n  const [oferta, setOferta] = useState(\"\");\r\n  const [telefono, setTelefono] = useState(\"\");\r\n  const [privado, setPrivado] = useState(false);\r\n  const [requisitos, setRequisitos] = useState(false);\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const [invalid, setInvalid] = useState(false);\r\n  const [invalidDay, setInvalidDay] = useState(false);\r\n\r\n  //Envio booking exitodo\r\n  const [ok, setOk] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const id_cuenta_cliente = clientId;\r\n  const username_cliente = clientUsername;\r\n\r\n  const id_cuenta_dj = djId;\r\n  const username_dj = djUsername;\r\n\r\n  const handleChange = (val) => setTransporte(val);\r\n\r\n  function mandarBooking() {\r\n    if (dia.toDateString() === new Date().toDateString()) {\r\n      return setInvalidDay(true);\r\n    }\r\n    if (\r\n      tipo === \"\" ||\r\n      nombreEvent === \"\" ||\r\n      direccion === \"\" ||\r\n      llegada === \"\" ||\r\n      toca === \"\" ||\r\n      oferta === \"\" ||\r\n      telefono === \"\" ||\r\n      mensaje === \"\"\r\n    ) {\r\n      return setInvalid(true);\r\n    }\r\n    if (!requisitos) {\r\n      return setInvalid(true);\r\n    }\r\n    setInvalid(false);\r\n    setInvalidDay(false);\r\n\r\n    let gig = {\r\n      client_id: id_cuenta_cliente,\r\n      dj_id: id_cuenta_dj,\r\n      username_cliente: username_cliente,\r\n      username_dj: username_dj,\r\n      estado: \"Pendiente\",\r\n      dia_evento: dia,\r\n      tipo_evento: tipo.value,\r\n      nombre_evento: nombreEvent,\r\n      telefono: telefono,\r\n      direccion: direccion,\r\n      hora_llegada: llegada,\r\n      duracion: duracion.value,\r\n      hora_show: toca,\r\n      transporte: transporte === 1 ? \"Si\" : \"No\",\r\n      oferta: oferta,\r\n      link_evento: url,\r\n      privado: privado,\r\n      mensaje: [\r\n        {\r\n          mensaje: mensaje,\r\n          fecha: new Date(),\r\n          nombre: username_cliente,\r\n          estado: \"Pendiente\",\r\n        },\r\n      ],\r\n      leido_por_dj: false,\r\n      leido_por_cliente: true,\r\n    };\r\n    registerGigFetch(gig);\r\n    // console.log(gig);\r\n    return null;\r\n  }\r\n\r\n  function registerGigFetch(obj) {\r\n    console.log(obj);\r\n    fetch(`${fetchUrl}gig/register`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(obj),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.msg) {\r\n          setIsLoaded(true);\r\n          console.log(data.msg);\r\n          setError(true);\r\n        } else {\r\n          setIsLoaded(true);\r\n          setOk(true);\r\n          console.log(data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Hubo un error de conexión :( !</div>;\r\n  } else if (ok) {\r\n    return <>{todoOk}</>;\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <Form>\r\n          <Form.Row>\r\n            <Col className=\"col-md-12\">\r\n              <span> {` Cliente:  ${username_cliente}`}</span>\r\n            </Col>\r\n            <Col className=\"col-md-12\">\r\n              <span>{` DJ: ${username_dj}`}</span>\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-2\">\r\n            <Col className=\"d-flex flex-column col-md-12 col-sm-12 col-xs-12\">\r\n              <span>Día del Evento</span>\r\n              <DatePicker selected={dia} onChange={(date) => setDia(date)} />\r\n              {invalidDay ? dayWarning : null}\r\n            </Col>\r\n            <Col className=\"d-flex flex-column col-md-12 col-sm-12 col-xs-12\">\r\n              <span>Hora llegada DJ</span>\r\n              <DatePicker\r\n                selected={llegada}\r\n                onChange={(date) => setLLegada(date)}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </Col>\r\n            <Col className=\"d-flex flex-column col-md-12 col-sm-12 col-xs-12\">\r\n              <span>Hora que toca DJ</span>\r\n              <DatePicker\r\n                selected={toca}\r\n                onChange={(date) => setToca(date)}\r\n                showTimeSelect\r\n                showTimeSelectOnly\r\n                timeIntervals={15}\r\n                timeCaption=\"Time\"\r\n                dateFormat=\"h:mm aa\"\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-2\">\r\n            <Col className=\"d-flex flex-column col-md-12 col-sm-12 col-xs-12\">\r\n              <span>Tipo de Evento</span>\r\n              <Select\r\n                options={serviciosOptions}\r\n                value={tipo}\r\n                onChange={setTipo}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-2\">\r\n            <Col className=\"d-flex flex-column col-md-12 col-sm-12 col-xs-12\">\r\n              <span>\r\n                Evento es privado?\r\n                <Tippy content=\"Si es publico podremos publicitar el nombre del evento con el link en nuestra página\">\r\n                  <i className=\"fas fa-info-circle\"></i>\r\n                </Tippy>\r\n              </span>\r\n              <Form.Check\r\n                inline\r\n                label=\"Si\"\r\n                type={\"radio\"}\r\n                id={`1`}\r\n                onChange={() => setPrivado(true)}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-2\">\r\n            <Col className=\"d-flex flex-column\">\r\n              <span>Nombre del Evento</span>\r\n              <Form.Control\r\n                placeholder=\"Nombre del evento\"\r\n                value={nombreEvent}\r\n                onChange={(e) => setNombreEvent(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-2\">\r\n            <Col className=\"d-flex flex-column col-md-12 col-sm-12 col-xs-12\">\r\n              <span>\r\n                URL a evento (opcional){\" \"}\r\n                <Tippy content=\"Comparte un flyer o link con información del evento\">\r\n                  <i className=\"fas fa-info-circle\"></i>\r\n                </Tippy>\r\n              </span>\r\n              <Form.Control\r\n                placeholder=\"https://www.mievento.com/unevento\"\r\n                value={url}\r\n                onChange={(e) => setUrl(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-2\">\r\n            <Col className=\"d-flex flex-column col-md-6 col-sm-12 col-xs-12\">\r\n              <span>Dirección del Evento</span>\r\n              <Form.Control\r\n                placeholder=\"Calle, Numero, Comuna\"\r\n                value={direccion}\r\n                onChange={(e) => setDireccion(e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col className=\"d-flex flex-column col-md-6 col-sm-12 col-xs-12\">\r\n              <span>Duración Performance</span>\r\n              <Select\r\n                options={tiempos}\r\n                value={duracion}\r\n                onChange={setDuracion}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-2\">\r\n            <Col className=\"d-flex flex-column\">\r\n              <span>Ingresa un teléfono de contacto</span>\r\n              <Form.Control\r\n                placeholder=\"\"\r\n                value={telefono}\r\n                onChange={(e) => setTelefono(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-2\">\r\n            <Col className=\"d-flex flex-column col-md-6 col-sm-12 col-xs-12\">\r\n              <span>Facilitas Transporte?</span>\r\n              <div>\r\n                <ToggleButtonGroup\r\n                  type=\"radio\"\r\n                  name=\"options\"\r\n                  defaultValue={2}\r\n                  value={transporte}\r\n                  onChange={handleChange}\r\n                  color=\"black\"\r\n                  className=\"mt-2\"\r\n                >\r\n                  <ToggleButton value={1} variant=\"secondary\">\r\n                    Si\r\n                  </ToggleButton>\r\n                  <ToggleButton value={2} variant=\"secondary\">\r\n                    No\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"d-flex flex-column col-md-12 col-sm-12 col-xs-12\">\r\n              <span>Has leído los requisitos mínimos del DJ?</span>\r\n              <Form.Check\r\n                inline\r\n                label=\"Si\"\r\n                type={\"radio\"}\r\n                id={`1`}\r\n                onChange={() => setRequisitos(true)}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Col className=\"d-flex flex-column col-md-12 mt-3\">\r\n              <span>Tu oferta en CLP</span>\r\n              <Form.Control\r\n                placeholder=\"Ej: 150.000\"\r\n                value={oferta}\r\n                onChange={(e) => setOferta(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Col className=\"d-flex flex-column col-md-12 col-sm-12 col-xs-12 mt-3\">\r\n              <span>Ingresa un mensaje inicial</span>\r\n              <textarea\r\n                rows=\"3\"\r\n                value={mensaje}\r\n                onChange={(e) => setMensaje(e.target.value)}\r\n              ></textarea>\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row className=\"mt-3 mb-3\">\r\n            <span className=\"btn btn-primary\" onClick={mandarBooking}>\r\n              Generar Booking\r\n            </span>\r\n            {invalid ? warning : null}\r\n          </Form.Row>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Booking;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\general\\cuenta.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\general\\datos_cuenta.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\general\\cambiar_clave_cuenta.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\dj\\gigs\\lista_gigs.js",["395","396","397"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Context } from \"../../../store/appContext\";\r\nimport { Modal, Table } from \"react-bootstrap\";\r\nimport Spinner from \"../../home/spinner\";\r\n\r\nconst options = {\r\n  weekday: \"long\",\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  day: \"numeric\",\r\n};\r\n\r\nconst optionsHoras = { hour: \"2-digit\", minute: \"2-digit\" };\r\n\r\nconst ListaGigs = () => {\r\n  const { store, actions } = useContext(Context);\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [gigs, setGigs] = useState(store.gigs);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!store.LoggedIn) {\r\n      setError(true);\r\n    } else {\r\n      setError(null);\r\n      fetchGigs();\r\n    }\r\n  }, [store.LoggedIn]);\r\n\r\n  function goToGig(id) {\r\n    history.push(`/gigs/${id}`);\r\n  }\r\n  const fetchGigs = () => {\r\n    fetch(`${store.fetchUrl}account/gig`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${store.token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setIsLoaded(true);\r\n        setGigs(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  if (error) {\r\n    return <div>Hubo un error de conexión</div>;\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <div>\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Table striped borderless hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Día</th>\r\n              <th>Hora llegada</th>\r\n              <th>Cliente</th>\r\n              <th>Evento</th>\r\n              <th>Estado</th>\r\n              <th>Detalles</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {!!gigs &&\r\n              gigs.map((gig) => {\r\n                return (\r\n                  <tr key={gig.id}>\r\n                    <td>\r\n                      {new Date(gig.dia_evento).toLocaleDateString(\r\n                        \"es-CL\",\r\n                        options\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {new Date(gig.hora_llegada).toLocaleString(\r\n                        \"es-CL\",\r\n                        optionsHoras\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <Link to={`/client/profile/${gig.username_cliente}`}>\r\n                        {gig.username_cliente}\r\n                      </Link>\r\n                    </td>\r\n                    <td>{gig.nombre_evento}</td>\r\n                    <td>{gig.estado}</td>\r\n                    <td>\r\n                      <span\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => goToGig(gig.id)}\r\n                      >\r\n                        Detalles\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListaGigs;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\cliente\\contrataciones\\lista_contrataciones.js",["398","399","400"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../../store/appContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Modal, Table } from \"react-bootstrap\";\r\nimport Spinner from \"../../home/spinner\";\r\n\r\nconst options = {\r\n  weekday: \"long\",\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  day: \"numeric\",\r\n};\r\n\r\nconst optionsHoras = { hour: \"2-digit\", minute: \"2-digit\" };\r\n\r\nconst ListaContrataciones = () => {\r\n  const { store, actions } = useContext(Context);\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [gigs, setGigs] = useState(store.gigs);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!store.LoggedIn) {\r\n      setError(true);\r\n    } else {\r\n      setError(null);\r\n      fetchGigs();\r\n    }\r\n  }, [store.LoggedIn]);\r\n\r\n  function goToGig(id) {\r\n    history.push(`/gigs/${id}`);\r\n  }\r\n\r\n  const fetchGigs = () => {\r\n    fetch(`${store.fetchUrl}account/gig`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${store.token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setIsLoaded(true);\r\n        setGigs(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  if (error) {\r\n    return <div>Hubo un error de conexión</div>;\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <div>\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Table striped borderless hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Día</th>\r\n              <th>Hora llegada DJ</th>\r\n              <th>DJ</th>\r\n              <th>Evento</th>\r\n              <th>Estado</th>\r\n              <th>Detalles</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {!!gigs &&\r\n              gigs.map((gig) => {\r\n                return (\r\n                  <tr key={gig.id}>\r\n                    <td>\r\n                      {new Date(gig.dia_evento).toLocaleDateString(\r\n                        \"es-CL\",\r\n                        options\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {new Date(gig.hora_llegada).toLocaleString(\r\n                        \"es-CL\",\r\n                        optionsHoras\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <Link to={`/dj/profile/${gig.username_dj}`}>\r\n                        {gig.username_dj}\r\n                      </Link>\r\n                    </td>\r\n                    <td>{gig.nombre_evento}</td>\r\n                    <td>{gig.estado}</td>\r\n                    <td>\r\n                      <span\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => goToGig(gig.id)}\r\n                      >\r\n                        Detalles\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ListaContrataciones;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\dj\\gigs.js",["401"],"import ListaGigs from \"../../components/dj/gigs/lista_gigs\";\r\nimport ListaContrataciones from \"../../components/cliente/contrataciones/lista_contrataciones\";\r\n\r\nconst Gigs = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row m-3\">\r\n        <h3>Gigs</h3>\r\n      </div>\r\n      <div className=\"row\">\r\n        <ListaGigs />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gigs;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\cliente\\contrataciones.js",[],"C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\views\\gigs\\gigspadre.js",["402","403","404","405","406"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Context } from \"../../store/appContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport DjGig from \"../../components/gigs/gig_dj\";\r\nimport ClientGig from \"../../components/gigs/gig_cliente\";\r\n\r\n// placeholder\r\n\r\nconst optionsHoras = { hour: \"2-digit\", minute: \"2-digit\" };\r\n\r\nconst options = {\r\n  weekday: \"long\",\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  day: \"numeric\",\r\n};\r\n\r\nconst warning = (\r\n  <small className=\"row text-danger ml-2\">\r\n    Tienes que escribir un mensaje para poder realizar una acción\r\n  </small>\r\n);\r\n\r\nconst cambios = (\r\n  <small className=\"text-success\">Gracias! Ahora espera una respueta.</small>\r\n);\r\n\r\nconst mensajeLogin = (\r\n  <div>\r\n    Hola! Tienes que ingresar como usuario para poder ver este contenido\r\n  </div>\r\n);\r\n\r\nconst GigComponent = () => {\r\n  const { store } = useContext(Context);\r\n  const [gig, setGig] = useState({});\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [msg, setMsg] = useState(null);\r\n  const [logMsg, setLogMsg] = useState(false);\r\n\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    getGig(id);\r\n  }, [isLoaded]);\r\n\r\n  function getGig(id) {\r\n    fetch(`${store.fetchUrl}gig/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${store.token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.msg) {\r\n          setIsLoaded(true);\r\n          setLogMsg(false);\r\n          setMsg(data.msg);\r\n        } else {\r\n          setLogMsg(false);\r\n          setMsg(null);\r\n          setError(null);\r\n          setGig(data);\r\n          setIsLoaded(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      });\r\n  }\r\n\r\n  function updateGig(obj, id) {\r\n    fetch(`${store.fetchUrl}gig/update/${id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(obj),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${store.token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => console.log(data))\r\n      .catch((error) => console.log(error));\r\n  }\r\n  if (logMsg) {\r\n    return (\r\n      <>\r\n        {mensajeLogin}\r\n        <small>Cargando...</small>;\r\n      </>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <div>Hubo un problema de conexion</div>;\r\n  } else if (!isLoaded) {\r\n    return <small>Cargando...</small>;\r\n  } else if (msg) {\r\n    return <div>{msg}</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        {store.role === \"dj\" ? (\r\n          <DjGig\r\n            gig={gig}\r\n            option={options}\r\n            optionsHoras={optionsHoras}\r\n            warning={warning}\r\n            cambios={cambios}\r\n            updateGig={updateGig}\r\n            id={id}\r\n          />\r\n        ) : store.role === \"client\" ? (\r\n          <ClientGig\r\n            gig={gig}\r\n            option={options}\r\n            optionsHoras={optionsHoras}\r\n            warning={warning}\r\n            cambios={cambios}\r\n            updateGig={updateGig}\r\n            id={id}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default GigComponent;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\gigs\\gig_dj.js",["407"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst DjGig = ({\r\n  options,\r\n  warning,\r\n  optionsHoras,\r\n  cambios,\r\n  gig,\r\n  updateGig,\r\n  id,\r\n}) => {\r\n  // const [gig, setGig] = useState(gig);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgWarning, setMsgWarning] = useState(false);\r\n  const [\r\n    aceptadoODeclinadoOConfirmado,\r\n    setAceptadoODeclinadoOConfirmado,\r\n  ] = useState(false);\r\n  const [pideCambios, setPideCambios] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      gig.estado === \"Aceptado\" ||\r\n      gig.estado === \"Declinado\" ||\r\n      gig.estado === \"Confirmado\" ||\r\n      gig.estado === \"Cancelado\"\r\n    ) {\r\n      setAceptadoODeclinadoOConfirmado(true);\r\n    }\r\n    if (gig.estado === \"Dj pide cambios\") {\r\n      setPideCambios(true);\r\n    }\r\n  });\r\n\r\n  function gigAceptado() {\r\n    if (msg === \"\") {\r\n      return setMsgWarning(true);\r\n    } else {\r\n      let gigCopy = { ...gig };\r\n      let mensajesArray = gigCopy.mensaje;\r\n      mensajesArray.unshift({\r\n        nombre: gig.username_dj,\r\n        fecha: new Date(),\r\n        estado: \"Aceptado\",\r\n        mensaje: msg,\r\n      });\r\n\r\n      //fetch\r\n      let data = {\r\n        ...gig,\r\n        mensaje: mensajesArray,\r\n        estado: \"Aceptado\",\r\n        leido_por_dj: true,\r\n        leido_por_cliente: false,\r\n      };\r\n      updateGig(data, id);\r\n      setAceptadoODeclinadoOConfirmado(true);\r\n    }\r\n  }\r\n\r\n  function gigDeclinado() {\r\n    if (msg === \"\") {\r\n      return setMsgWarning(true);\r\n    } else {\r\n      let gigCopy = { ...gig };\r\n      let mensajesArray = gigCopy.mensaje;\r\n      mensajesArray.unshift({\r\n        nombre: gig.username_dj,\r\n        fecha: new Date(),\r\n        estado: \"Declinado\",\r\n        mensaje: msg,\r\n      });\r\n\r\n      //fetch\r\n      let data = {\r\n        ...gig,\r\n        mensaje: mensajesArray,\r\n        estado: \"Declinado\",\r\n        leido_por_dj: true,\r\n        leido_por_cliente: false,\r\n      };\r\n\r\n      updateGig(data, id);\r\n      setAceptadoODeclinadoOConfirmado(true);\r\n    }\r\n  }\r\n\r\n  function gigModificado() {\r\n    if (msg === \"\") {\r\n      return setMsgWarning(true);\r\n    } else {\r\n      let gigCopy = { ...gig };\r\n      let mensajesArray = gigCopy.mensaje;\r\n      mensajesArray.unshift({\r\n        nombre: gig.username_dj,\r\n        fecha: new Date(),\r\n        estado: \"Dj pide cambios\",\r\n        mensaje: msg,\r\n      });\r\n      //fetch\r\n      let data = {\r\n        ...gig,\r\n        mensaje: mensajesArray,\r\n        estado: \"Dj pide cambios\",\r\n        leido_por_dj: true,\r\n        leido_por_cliente: false,\r\n      };\r\n\r\n      updateGig(data, id);\r\n      setMsg(\"\");\r\n      setPideCambios(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <span className=\"font-weight-bold\">Estado: </span>\r\n            <span className=\"font-weight-light gig-text\">{gig.estado}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-2 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Cliente:</span>\r\n\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.username_cliente}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-2 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Dj:</span>\r\n\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.username_dj}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Día del evento: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {new Date(gig.dia_evento).toLocaleDateString(\"es-CL\", options)}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Tipo de evento: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.tipo_evento}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Nombre de evento: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.nombre_evento}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Link a evento: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.link_evento}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Teléfono de contacto: </span>\r\n            <span className=\"font-weight-light gig-text\">{gig.telefono}</span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Hora que debes llegar: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {new Date(gig.hora_llegada).toLocaleString(\"es-CL\", optionsHoras)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Hora que tocas: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {new Date(gig.hora_show).toLocaleString(\"es-CL\", optionsHoras)}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Duración: </span>\r\n            <span className=\"font-weight-light gig-text\">{gig.duracion}</span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Se facilita transporte: </span>\r\n            <span className=\"font-weight-light gig-text\">{gig.transporte}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Oferta en CLP: </span>\r\n            <span className=\"font-weight-light gig-text\">{gig.oferta}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {aceptadoODeclinadoOConfirmado ? (\r\n        <span className=\"font-weight-bold m-5\">\r\n          Este Gig ha sido aceptado, confirmado o declinado, ya no se pueden\r\n          hacer cambios.\r\n        </span>\r\n      ) : (\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div className=\"row mt-2\">\r\n              <div className=\"col-md-12 d-flex flex-column\">\r\n                <span className=\"font-weight-bold\">\r\n                  Deja un mensaje relacionado con tu siguiente acción:{\" \"}\r\n                </span>\r\n                <span className=\"font-weight-light gig-text\">\r\n                  <textarea\r\n                    id=\"emensaje\"\r\n                    rows=\"3\"\r\n                    className=\"col-md-10 mt-2\"\r\n                    value={msg}\r\n                    onChange={(e) => setMsg(e.target.value)}\r\n                  ></textarea>\r\n                  {msgWarning ? warning : null}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                {pideCambios ? (\r\n                  cambios\r\n                ) : (\r\n                  <>\r\n                    <span className=\"btn btn-success m-1\" onClick={gigAceptado}>\r\n                      Aceptar Gig\r\n                    </span>\r\n                    <span\r\n                      className=\"btn btn-primary m-1\"\r\n                      onClick={gigModificado}\r\n                    >\r\n                      Pedir Modificaciones\r\n                    </span>\r\n                    <span className=\"btn btn-danger m-1\" onClick={gigDeclinado}>\r\n                      Declinar\r\n                    </span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div classname=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 mb-2\">\r\n              <span className=\"font-weight-bold ml-2\">Log de mensajes:</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-11\">\r\n              {!!gig.mensaje &&\r\n                gig.mensaje.map((msg, i) => (\r\n                  <div className=\"card\" key={i}>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span>\r\n                          {`${new Date(msg.fecha).toLocaleDateString(\r\n                            \"es-CL\",\r\n                            options\r\n                          )} por `}\r\n                          <span className=\"font-weight-bold\">{msg.nombre}</span>\r\n                        </span>\r\n                        <span>\r\n                          Estado:\r\n                          <span>{` ${msg.estado}`}</span>\r\n                        </span>\r\n                        <span className=\"font-weight-bol\">Mensaje:</span>\r\n                        <span className=\"gig-texto-mensaje ml-3\">\r\n                          {msg.mensaje}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DjGig;\r\n","C:\\Users\\fskar\\Desktop\\Projecto-Final\\projectofinal\\src\\components\\gigs\\gig_cliente.js",["408","409","410","411","412","413"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Context } from \"../../store/appContext\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Select from \"react-select\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst tiempos = [\r\n  { label: \"30 min\", value: \"30 min\" },\r\n  { label: \"45 min\", value: \"45 min\" },\r\n  { label: \"1 hr\", value: \"1hr\" },\r\n  { label: \"1 hr 30 min\", value: \"1 hr 30 min\" },\r\n  { label: \"1 hr 45 min\", value: \"1 hr 45 min\" },\r\n  { label: \"2 hrs\", value: \"2 hrs\" },\r\n  { label: \"2 hrs 30 min\", value: \"2 hrs 30 min\" },\r\n  { label: \"3 hrs\", value: \"3 hrs\" },\r\n  { label: \"3 hrs 30 min\", value: \"3 hrs 30 min\" },\r\n  { label: \"4 hrs\", value: \"4 hrs\" },\r\n  { label: \"5 hrs 30 min\", value: \"5 hrs 30 min\" },\r\n  { label: \"6 hrs\", value: \"6 hrs\" },\r\n  { label: \"6 hrs 30 min\", value: \"6 hrs 30 min\" },\r\n  { label: \"7 hrs\", value: \"7 hrs\" },\r\n];\r\n\r\nconst confirmarMsg = (\r\n  <small className=\"text-danger\">\r\n    Solo podrás confirmar una vez que el DJ haya aceptado\r\n  </small>\r\n);\r\n\r\nconst ClientGig = ({\r\n  options,\r\n  warning,\r\n  optionsHoras,\r\n  cambios,\r\n  gig,\r\n  updateGig,\r\n  id,\r\n}) => {\r\n  const { store, actions } = useContext(Context);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [msgWarning, setMsgWarning] = useState(false);\r\n  const [confirmar, setConfirmar] = useState(false);\r\n  const [\r\n    confirmadoODeclinadoOCanceladoOPendiente,\r\n    setconfirmadoODeclinadoOCanceladoOPendiente,\r\n  ] = useState(false);\r\n  const [pideCambios, setPideCambios] = useState(false);\r\n  const [ejemploGig, setEjemploGig] = useState({});\r\n\r\n  // cambios\r\n  const [llegada, setLLegada] = useState(new Date(gig.hora_llegada));\r\n  const [toca, setToca] = useState(new Date(gig.hora_show));\r\n  const [duracion, setDuracion] = useState({\r\n    label: gig.duracion,\r\n    value: gig.duracion,\r\n  });\r\n  const [transporte, setTransporte] = useState(gig.transporte === \"Si\" ? 1 : 2);\r\n  const [oferta, setOferta] = useState(gig.oferta);\r\n\r\n  //\r\n  useEffect(() => {\r\n    if (\r\n      gig.estado === \"Cancelado\" ||\r\n      gig.estado === \"Declinado\" ||\r\n      gig.estado === \"Pendiente\" ||\r\n      gig.estado === \"Confirmado\"\r\n    ) {\r\n      setconfirmadoODeclinadoOCanceladoOPendiente(true);\r\n    }\r\n    if (gig.estado === \"Modificado por Cliente\") {\r\n      setPideCambios(true);\r\n    }\r\n  });\r\n\r\n  //Para el transporte si /no\r\n  const handleChange = (val) => setTransporte(val);\r\n  //\r\n\r\n  function clienteConfirmo() {\r\n    if (gig.estado !== \"Aceptado\") {\r\n      return setConfirmar(true);\r\n    }\r\n    if (msg === \"\") {\r\n      return setMsgWarning(true);\r\n    } else {\r\n      let gigCopy = { ...gig };\r\n      let mensajesArray = gigCopy.mensaje;\r\n      mensajesArray.unshift({\r\n        nombre: gig.username_cliente,\r\n        fecha: new Date(),\r\n        estado: \"Confirmado\",\r\n        mensaje: msg,\r\n      });\r\n      //fetch\r\n\r\n      let data = {\r\n        ...gig,\r\n        mensaje: mensajesArray,\r\n        estado: \"Confirmado\",\r\n        leido_por_dj: false,\r\n        leido_por_cliente: true,\r\n      };\r\n      updateGig(data, id);\r\n      setconfirmadoODeclinadoOCanceladoOPendiente(true);\r\n    }\r\n  }\r\n\r\n  function clienteCancelo() {\r\n    if (msg === \"\") {\r\n      return setMsgWarning(true);\r\n    } else {\r\n      let gigCopy = { ...gig };\r\n      let mensajesArray = gigCopy.mensaje;\r\n      mensajesArray.unshift({\r\n        nombre: gig.username_cliente,\r\n        fecha: new Date(),\r\n        estado: \"Cancelado\",\r\n        mensaje: msg,\r\n      });\r\n\r\n      //fetch\r\n      let data = {\r\n        ...gig,\r\n        mensaje: mensajesArray,\r\n        estado: \"Cancelado\",\r\n        leido_por_dj: false,\r\n        leido_por_cliente: true,\r\n      };\r\n      updateGig(data, id);\r\n      setconfirmadoODeclinadoOCanceladoOPendiente(true);\r\n    }\r\n  }\r\n\r\n  function gigModificado() {\r\n    if (msg === \"\") {\r\n      return setMsgWarning(true);\r\n    } else {\r\n      let gigCopy = { ...gig };\r\n      let mensajesArray = gigCopy.mensaje;\r\n      mensajesArray.unshift({\r\n        nombre: gig.username_cliente,\r\n        fecha: new Date(),\r\n        estado: \"Modificado por Cliente\",\r\n        mensaje: msg,\r\n      });\r\n      //fetch\r\n      let data = {\r\n        ...gig,\r\n        mensaje: mensajesArray,\r\n        estado: \"Modificado por Cliente\",\r\n        leido_por_dj: false,\r\n        leido_por_cliente: true,\r\n        duracion: duracion.label,\r\n        hora_llegada: llegada,\r\n        hora_show: toca,\r\n        transporte: transporte === 1 ? \"Si\" : \"No\",\r\n        oferta: oferta,\r\n      };\r\n\r\n      updateGig(data, id);\r\n      setMsg(\"\");\r\n      setPideCambios(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <span className=\"font-weight-bold\">Estado: </span>\r\n            <span className=\"font-weight-light gig-text\">{gig.estado}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-2 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Cliente:</span>\r\n\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.username_cliente}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-2 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Dj:</span>\r\n\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.username_dj}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Día del evento: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {new Date(gig.dia_evento).toLocaleDateString(\"es-CL\", options)}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Tipo de evento: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.tipo_evento}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Nombre de evento: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.nombre_evento}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Link a evento: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {gig.link_evento}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Teléfono de contacto: </span>\r\n            <span className=\"font-weight-light gig-text\">{gig.telefono}</span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Hora que debe llegar DJ: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {confirmadoODeclinadoOCanceladoOPendiente ||\r\n              gig.estado === \"Aceptado\" ? (\r\n                new Date(gig.hora_llegada).toLocaleString(\"es-CL\", optionsHoras)\r\n              ) : (\r\n                <DatePicker\r\n                  selected={llegada}\r\n                  onChange={(date) => setLLegada(date)}\r\n                  showTimeSelect\r\n                  showTimeSelectOnly\r\n                  timeIntervals={15}\r\n                  timeCaption=\"Time\"\r\n                  dateFormat=\"h:mm aa\"\r\n                />\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Hora que toca DJ: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {confirmadoODeclinadoOCanceladoOPendiente ||\r\n              gig.estado === \"Aceptado\" ? (\r\n                new Date(gig.hora_show).toLocaleString(\"es-CL\", optionsHoras)\r\n              ) : (\r\n                <DatePicker\r\n                  selected={toca}\r\n                  onChange={(date) => setToca(date)}\r\n                  showTimeSelect\r\n                  showTimeSelectOnly\r\n                  timeIntervals={15}\r\n                  timeCaption=\"Time\"\r\n                  dateFormat=\"h:mm aa\"\r\n                />\r\n              )}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Duración: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {confirmadoODeclinadoOCanceladoOPendiente ||\r\n              gig.estado === \"Aceptado\" ? (\r\n                gig.duracion\r\n              ) : (\r\n                <Select\r\n                  options={tiempos}\r\n                  value={duracion}\r\n                  onChange={setDuracion}\r\n                />\r\n              )}\r\n            </span>\r\n          </div>\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Se facilita transporte: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {confirmadoODeclinadoOCanceladoOPendiente ||\r\n              gig.estado === \"Aceptado\" ? (\r\n                gig.transporte\r\n              ) : (\r\n                <ToggleButtonGroup\r\n                  type=\"radio\"\r\n                  name=\"options\"\r\n                  value={transporte}\r\n                  onChange={handleChange}\r\n                  color=\"black\"\r\n                  className=\"mt-2\"\r\n                >\r\n                  <ToggleButton value={1} variant=\"secondary\">\r\n                    Si\r\n                  </ToggleButton>\r\n                  <ToggleButton value={2} variant=\"secondary\">\r\n                    No\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 d-flex flex-column\">\r\n            <span className=\"font-weight-bold\">Oferta en CLP: </span>\r\n            <span className=\"font-weight-light gig-text\">\r\n              {confirmadoODeclinadoOCanceladoOPendiente ||\r\n              gig.estado === \"Aceptado\" ? (\r\n                gig.oferta\r\n              ) : (\r\n                <input\r\n                  placeholder=\"Ej: 150.000\"\r\n                  value={oferta}\r\n                  onChange={(e) => setOferta(e.target.value)}\r\n                />\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {confirmadoODeclinadoOCanceladoOPendiente ? (\r\n        <span className=\"font-weight-bold m-5\">\r\n          No se pueden hacer cambios por el momento, booking tiene un estado\r\n          confirmado/declinado/cancelado o hay una respuesta pendiente.\r\n        </span>\r\n      ) : (\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div className=\"row mt-2\">\r\n              <div className=\"col-md-12 d-flex flex-column\">\r\n                <span className=\"font-weight-bold\">\r\n                  Deja un mensaje relacionado con tu siguiente acción:{\" \"}\r\n                </span>\r\n                <span className=\"font-weight-light gig-text\">\r\n                  <textarea\r\n                    id=\"emensaje\"\r\n                    rows=\"3\"\r\n                    className=\"col-md-10 mt-2\"\r\n                    value={msg}\r\n                    onChange={(e) => setMsg(e.target.value)}\r\n                  ></textarea>\r\n                  {msgWarning ? warning : null}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                {pideCambios ? (\r\n                  cambios\r\n                ) : (\r\n                  <>\r\n                    <span\r\n                      className=\"btn btn-primary m-1\"\r\n                      onClick={gigModificado}\r\n                    >\r\n                      Enviar Modificaciones\r\n                    </span>\r\n                    <span\r\n                      className=\"btn btn-danger m-1\"\r\n                      onClick={clienteCancelo}\r\n                    >\r\n                      Cancelar Booking\r\n                    </span>\r\n                    <span\r\n                      className=\"btn btn-success m-1\"\r\n                      onClick={clienteConfirmo}\r\n                    >\r\n                      Confirmar Booking\r\n                    </span>\r\n                    {confirmar ? confirmarMsg : null}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div classname=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 mb-2\">\r\n              <span className=\"font-weight-bold ml-2\">Log de mensajes:</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-11\">\r\n              {!!gig.mensaje &&\r\n                gig.mensaje.map((msg, i) => (\r\n                  <div className=\"card\" key={i}>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span>\r\n                          {`${new Date(msg.fecha).toLocaleDateString(\r\n                            \"es-CL\",\r\n                            options\r\n                          )} por `}\r\n                          <span className=\"font-weight-bold\">{msg.nombre}</span>\r\n                        </span>\r\n                        <span>\r\n                          Estado:\r\n                          <span>{` ${msg.estado}`}</span>\r\n                        </span>\r\n                        <span className=\"font-weight-bol\">Mensaje:</span>\r\n                        <span className=\"gig-texto-mensaje ml-3\">\r\n                          {msg.mensaje}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientGig;\r\n",{"ruleId":"414","replacedBy":"415"},{"ruleId":"416","replacedBy":"417"},{"ruleId":"418","severity":1,"message":"419","line":8,"column":10,"nodeType":"420","messageId":"421","endLine":8,"endColumn":18},{"ruleId":"422","severity":1,"message":"423","line":26,"column":8,"nodeType":"424","endLine":26,"endColumn":18,"suggestions":"425"},{"ruleId":"422","severity":1,"message":"426","line":19,"column":6,"nodeType":"424","endLine":19,"endColumn":14,"suggestions":"427"},{"ruleId":"418","severity":1,"message":"428","line":7,"column":10,"nodeType":"420","messageId":"421","endLine":7,"endColumn":21},{"ruleId":"422","severity":1,"message":"429","line":18,"column":6,"nodeType":"424","endLine":18,"endColumn":12,"suggestions":"430"},{"ruleId":"414","replacedBy":"431"},{"ruleId":"416","replacedBy":"432"},{"ruleId":"418","severity":1,"message":"433","line":17,"column":10,"nodeType":"420","messageId":"421","endLine":17,"endColumn":16},{"ruleId":"418","severity":1,"message":"434","line":17,"column":18,"nodeType":"420","messageId":"421","endLine":17,"endColumn":27},{"ruleId":"418","severity":1,"message":"435","line":19,"column":24,"nodeType":"420","messageId":"421","endLine":19,"endColumn":40},{"ruleId":"422","severity":1,"message":"436","line":29,"column":6,"nodeType":"424","endLine":29,"endColumn":14,"suggestions":"437"},{"ruleId":"422","severity":1,"message":"438","line":36,"column":6,"nodeType":"424","endLine":36,"endColumn":14,"suggestions":"439"},{"ruleId":"418","severity":1,"message":"440","line":8,"column":18,"nodeType":"420","messageId":"421","endLine":8,"endColumn":25},{"ruleId":"418","severity":1,"message":"441","line":3,"column":7,"nodeType":"420","messageId":"421","endLine":3,"endColumn":11},{"ruleId":"418","severity":1,"message":"440","line":17,"column":18,"nodeType":"420","messageId":"421","endLine":17,"endColumn":25},{"ruleId":"422","severity":1,"message":"442","line":23,"column":6,"nodeType":"424","endLine":23,"endColumn":8,"suggestions":"443"},{"ruleId":"422","severity":1,"message":"436","line":20,"column":6,"nodeType":"424","endLine":20,"endColumn":8,"suggestions":"444"},{"ruleId":"418","severity":1,"message":"445","line":5,"column":10,"nodeType":"420","messageId":"421","endLine":5,"endColumn":22},{"ruleId":"418","severity":1,"message":"446","line":1,"column":39,"nodeType":"420","messageId":"421","endLine":1,"endColumn":48},{"ruleId":"418","severity":1,"message":"447","line":2,"column":10,"nodeType":"420","messageId":"421","endLine":2,"endColumn":18},{"ruleId":"448","severity":1,"message":"449","line":47,"column":18,"nodeType":"450","messageId":"451","endLine":47,"endColumn":19,"suggestions":"452"},{"ruleId":"448","severity":1,"message":"449","line":47,"column":43,"nodeType":"450","messageId":"451","endLine":47,"endColumn":44,"suggestions":"453"},{"ruleId":"418","severity":1,"message":"454","line":2,"column":10,"nodeType":"420","messageId":"421","endLine":2,"endColumn":20},{"ruleId":"418","severity":1,"message":"440","line":8,"column":18,"nodeType":"420","messageId":"421","endLine":8,"endColumn":25},{"ruleId":"448","severity":1,"message":"455","line":47,"column":45,"nodeType":"450","messageId":"451","endLine":47,"endColumn":46,"suggestions":"456"},{"ruleId":"418","severity":1,"message":"457","line":5,"column":8,"nodeType":"420","messageId":"421","endLine":5,"endColumn":16},{"ruleId":"418","severity":1,"message":"458","line":7,"column":20,"nodeType":"420","messageId":"421","endLine":7,"endColumn":26},{"ruleId":"418","severity":1,"message":"459","line":8,"column":3,"nodeType":"420","messageId":"421","endLine":8,"endColumn":9},{"ruleId":"418","severity":1,"message":"460","line":9,"column":3,"nodeType":"420","messageId":"421","endLine":9,"endColumn":8},{"ruleId":"418","severity":1,"message":"461","line":35,"column":7,"nodeType":"420","messageId":"421","endLine":35,"endColumn":14},{"ruleId":"422","severity":1,"message":"462","line":43,"column":6,"nodeType":"424","endLine":43,"endColumn":22,"suggestions":"463"},{"ruleId":"422","severity":1,"message":"464","line":54,"column":6,"nodeType":"424","endLine":54,"endColumn":15,"suggestions":"465"},{"ruleId":"418","severity":1,"message":"466","line":14,"column":18,"nodeType":"420","messageId":"421","endLine":14,"endColumn":27},{"ruleId":"418","severity":1,"message":"440","line":15,"column":18,"nodeType":"420","messageId":"421","endLine":15,"endColumn":25},{"ruleId":"448","severity":1,"message":"467","line":27,"column":39,"nodeType":"450","messageId":"451","endLine":27,"endColumn":40,"suggestions":"468"},{"ruleId":"448","severity":1,"message":"467","line":27,"column":92,"nodeType":"450","messageId":"451","endLine":27,"endColumn":93,"suggestions":"469"},{"ruleId":"418","severity":1,"message":"457","line":4,"column":8,"nodeType":"420","messageId":"421","endLine":4,"endColumn":16},{"ruleId":"418","severity":1,"message":"458","line":6,"column":20,"nodeType":"420","messageId":"421","endLine":6,"endColumn":26},{"ruleId":"418","severity":1,"message":"459","line":7,"column":3,"nodeType":"420","messageId":"421","endLine":7,"endColumn":9},{"ruleId":"418","severity":1,"message":"460","line":8,"column":3,"nodeType":"420","messageId":"421","endLine":8,"endColumn":8},{"ruleId":"418","severity":1,"message":"440","line":23,"column":18,"nodeType":"420","messageId":"421","endLine":23,"endColumn":25},{"ruleId":"422","severity":1,"message":"462","line":38,"column":6,"nodeType":"424","endLine":38,"endColumn":22,"suggestions":"470"},{"ruleId":"418","severity":1,"message":"471","line":7,"column":19,"nodeType":"420","messageId":"421","endLine":7,"endColumn":29},{"ruleId":"418","severity":1,"message":"472","line":82,"column":10,"nodeType":"420","messageId":"421","endLine":82,"endColumn":18},{"ruleId":"418","severity":1,"message":"473","line":5,"column":10,"nodeType":"420","messageId":"421","endLine":5,"endColumn":15},{"ruleId":"418","severity":1,"message":"440","line":18,"column":18,"nodeType":"420","messageId":"421","endLine":18,"endColumn":25},{"ruleId":"422","severity":1,"message":"474","line":32,"column":6,"nodeType":"424","endLine":32,"endColumn":22,"suggestions":"475"},{"ruleId":"418","severity":1,"message":"473","line":5,"column":10,"nodeType":"420","messageId":"421","endLine":5,"endColumn":15},{"ruleId":"418","severity":1,"message":"440","line":18,"column":18,"nodeType":"420","messageId":"421","endLine":18,"endColumn":25},{"ruleId":"422","severity":1,"message":"474","line":32,"column":6,"nodeType":"424","endLine":32,"endColumn":22,"suggestions":"476"},{"ruleId":"418","severity":1,"message":"477","line":2,"column":8,"nodeType":"420","messageId":"421","endLine":2,"endColumn":27},{"ruleId":"418","severity":1,"message":"454","line":3,"column":10,"nodeType":"420","messageId":"421","endLine":3,"endColumn":20},{"ruleId":"418","severity":1,"message":"458","line":5,"column":20,"nodeType":"420","messageId":"421","endLine":5,"endColumn":26},{"ruleId":"418","severity":1,"message":"459","line":6,"column":3,"nodeType":"420","messageId":"421","endLine":6,"endColumn":9},{"ruleId":"418","severity":1,"message":"460","line":7,"column":3,"nodeType":"420","messageId":"421","endLine":7,"endColumn":8},{"ruleId":"422","severity":1,"message":"478","line":52,"column":6,"nodeType":"424","endLine":52,"endColumn":16,"suggestions":"479"},{"ruleId":"422","severity":1,"message":"480","line":21,"column":3,"nodeType":"420","endLine":21,"endColumn":12,"suggestions":"481"},{"ruleId":"418","severity":1,"message":"454","line":2,"column":10,"nodeType":"420","messageId":"421","endLine":2,"endColumn":20},{"ruleId":"418","severity":1,"message":"482","line":43,"column":11,"nodeType":"420","messageId":"421","endLine":43,"endColumn":16},{"ruleId":"418","severity":1,"message":"440","line":43,"column":18,"nodeType":"420","messageId":"421","endLine":43,"endColumn":25},{"ruleId":"418","severity":1,"message":"483","line":52,"column":10,"nodeType":"420","messageId":"421","endLine":52,"endColumn":20},{"ruleId":"418","severity":1,"message":"484","line":52,"column":22,"nodeType":"420","messageId":"421","endLine":52,"endColumn":35},{"ruleId":"422","severity":1,"message":"485","line":65,"column":3,"nodeType":"420","endLine":65,"endColumn":12,"suggestions":"486"},"no-native-reassign",["487"],"no-negated-in-lhs",["488"],"no-unused-vars","'AdminNav' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.actions'. Either include it or remove the dependency array.","ArrayExpression",["489"],"React Hook useEffect has a missing dependency: 'store.requisitos'. Either include it or remove the dependency array.",["490"],"'SetCategory' is defined but never used.","React Hook useEffect has a missing dependency: 'store.home'. Either include it or remove the dependency array.",["491"],["487"],["488"],"'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'setObjetosGlobal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actions', 'store.token', and 'store.user_id'. Either include them or remove the dependency array.",["492"],"React Hook useEffect has a missing dependency: 'store.perfil'. Either include it or remove the dependency array.",["493"],"'actions' is assigned a value but never used.","'Home' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getGlobalObjects'. Either include it or remove the dependency array.",["494"],["495"],"'EditarPerfil' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["496","497"],["498","499"],"'useHistory' is defined but never used.","Unnecessary escape character: \\/.",["500","501"],"'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchProfile' and 'username'. Either include them or remove the dependency array.",["502"],"React Hook useEffect has missing dependencies: 'store.gigs' and 'store.username'. Either include them or remove the dependency array.",["503"],"'setPerfil' is assigned a value but never used.","Unnecessary escape character: \\+.",["504","505"],["506","507"],["508"],"'setProfile' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchGigs'. Either include it or remove the dependency array.",["509"],["510"],"'ListaContrataciones' is defined but never used.","React Hook useEffect has missing dependencies: 'getGig' and 'id'. Either include them or remove the dependency array.",["511"],"React Hook useEffect contains a call to 'setAceptadoODeclinadoOConfirmado'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [gig.estado] as a second argument to the useEffect Hook.",["512"],"'store' is assigned a value but never used.","'ejemploGig' is assigned a value but never used.","'setEjemploGig' is assigned a value but never used.","React Hook useEffect contains a call to 'setconfirmadoODeclinadoOCanceladoOPendiente'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [gig.estado] as a second argument to the useEffect Hook.",["513"],"no-global-assign","no-unsafe-negation",{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"messageId":"528","fix":"529","desc":"530"},{"messageId":"531","fix":"532","desc":"533"},{"messageId":"528","fix":"534","desc":"530"},{"messageId":"531","fix":"535","desc":"533"},{"messageId":"528","fix":"536","desc":"530"},{"messageId":"531","fix":"537","desc":"533"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"messageId":"528","fix":"542","desc":"530"},{"messageId":"531","fix":"543","desc":"533"},{"messageId":"528","fix":"544","desc":"530"},{"messageId":"531","fix":"545","desc":"533"},{"desc":"538","fix":"546"},{"desc":"547","fix":"548"},{"desc":"547","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"552","fix":"554"},"Update the dependencies array to be: [setState, state.actions]",{"range":"555","text":"556"},"Update the dependencies array to be: [global, store.requisitos]",{"range":"557","text":"558"},"Update the dependencies array to be: [home, store.home]",{"range":"559","text":"560"},"Update the dependencies array to be: [actions, perfil, store.token, store.user_id]",{"range":"561","text":"562"},"Update the dependencies array to be: [perfil, store.perfil]",{"range":"563","text":"564"},"Update the dependencies array to be: [getGlobalObjects]",{"range":"565","text":"566"},"Update the dependencies array to be: [actions, store.token, store.user_id]",{"range":"567","text":"568"},"removeEscape",{"range":"569","text":"570"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"571","text":"572"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"573","text":"570"},{"range":"574","text":"572"},{"range":"575","text":"570"},{"range":"576","text":"572"},"Update the dependencies array to be: [fetchProfile, store.LoggedIn, username]",{"range":"577","text":"578"},"Update the dependencies array to be: [profile, store.gigs, store.username]",{"range":"579","text":"580"},{"range":"581","text":"570"},{"range":"582","text":"572"},{"range":"583","text":"570"},{"range":"584","text":"572"},{"range":"585","text":"578"},"Update the dependencies array to be: [fetchGigs, store.LoggedIn]",{"range":"586","text":"587"},{"range":"588","text":"587"},"Update the dependencies array to be: [getGig, id, isLoaded]",{"range":"589","text":"590"},"Add dependencies array: [gig.estado]",{"range":"591","text":"592"},{"range":"593","text":"592"},[768,778],"[setState, state.actions]",[623,631],"[global, store.requisitos]",[732,738],"[home, store.home]",[1280,1288],"[actions, perfil, store.token, store.user_id]",[1410,1418],"[perfil, store.perfil]",[734,736],"[getGlobalObjects]",[698,700],"[actions, store.token, store.user_id]",[1389,1390],"",[1389,1389],"\\",[1414,1415],[1414,1414],[1267,1268],[1267,1267],[1328,1344],"[fetchProfile, store.LoggedIn, username]",[1572,1581],"[profile, store.gigs, store.username]",[866,867],[866,866],[919,920],[919,919],[1211,1227],[869,885],"[fetchGigs, store.LoggedIn]",[879,895],[1310,1320],"[getGig, id, isLoaded]",[795,795],", [gig.estado]",[2574,2574]]